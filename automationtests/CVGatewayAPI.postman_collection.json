{
	"info": {
		"_postman_id": "72d6a08a-0217-465e-893f-3835cdc337f2",
		"name": "CVGatewayAPI",
		"description": "Regression testing for CVGatewayAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Nissan/Infiniti",
			"item": [
				{
					"name": "NissanGetdataById",
					"item": [
						{
							"name": "PostDataByReferenceidNissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"PostDataByReferenceidNissan Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);});\r",
											"     var jsonData = pm.response.json();\r",
											"    pm.test(\"PostDataByReferenceidNissan  VarName Value\", function () {pm.expect(jsonData [0].VarName ).to.eql(\"User-to-User\");}); \r",
											"    pm.test(\"PostDataByReferenceidNissan  VarName Value\", function () {pm.expect(jsonData [0].Value ).to.eql(\"00524f4144534944457e3130383031353438397e34322e3430367e2d37312e303734327e314e34414c334150304b433035353432317e656e\");}); \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"programcode\":\"nissan\",\r\n\"language\": \"en\",\r\n\"referenceid\": \"108015489\",\r\n \"geolocation\": \"42.406~-71.0742~400;enc-param=token\",\r\n \"vin\": \"1N4AL3AP0KC055421\"\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus200Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"var today = new Date().toJSON().slice(0,10).replace(/-/g,'-');\r",
											"console.log(today);\r",
											"var d = new Date();\r",
											"var hour = d.getUTCHours();\r",
											"if (hour >= 0 && hour < 10) \r",
											"{hour = \"0\" + hour;\r",
											"}\r",
											"var min = d.getUTCMinutes();\r",
											"if (min >= 0 && min < 10) \r",
											"{min = \"0\" + min;\r",
											"}\r",
											"var time = hour + \":\" + min; \r",
											"console.log(time);\r",
											"console.log(time + Date);\r",
											"\r",
											"var timestamp = today + \"T\" + time; \r",
											"console.log(timestamp);\r",
											"\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.language).to.eql(\"en\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"nissan\");});\r",
											"\t\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.version).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(\"108015489\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(today);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.eql(time);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(timestamp);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.odometer).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(0.0);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(0.0);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"1N4AL3AP0KC055421\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand).to.eql(null);});\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Nissan data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});\r",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/108015489/programcode/nissan",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"108015489",
										"programcode",
										"nissan"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403_WrongKeyNissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_WrongKeyNissan  Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403VW  data.msisdn\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "RctjkExrMD73k7S1dYE4C7XxbQ6mR28Y9l3yydet"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/108015489/programcode/nissan",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"108015489",
										"programcode",
										"nissan"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403_NoKeyNissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_NoKeyNissan  Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403VW  data.msisdn\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/108015489/programcode/nissan",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"108015489",
										"programcode",
										"nissan"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestBadRequestHttpstatus400Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByIdRequestBadRequestHttpstatus400Nissan    Status code is 200\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByIdRequestBadRequestHttpstatus400Nissan    errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByIdRequestBadRequestHttpstatus400Nissan    errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByIdRequestBadRequestHttpstatus400Nissan    errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											" pm.test(\"GetDataByIdRequestBadRequestHttpstatus400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/108015489/programcode/Infiniti",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"108015489",
										"programcode",
										"Infiniti"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestNotFoundHttpstatus404Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByIdRequestNotFoundHttpstatus404Nissan  Status code is 404\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByIdRequestNotFoundHttpstatus404Nissan  errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"404\");}); \r",
											"   pm.test(\"GetDataByIdRequestNotFoundHttpstatus404Nissan  errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"NotFound\");}); \r",
											"   \r",
											"pm.test(\"GetDataByIdRequestNotFoundHttpstatus404Nissan  errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Not Found\");}); \r",
											"pm.test(\"GetDataByIdRequestNotFoundHttpstatus404Nissan  errors.detail Value\", function () {pm.expect(jsonData .errors [0].detail ).to.eql(\"No data found\");}); \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/108015480/programcode/nissan",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"108015480",
										"programcode",
										"nissan"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestInternalServererrorhttpstatus500Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Unable to assert this because the server needs to be down in order to test ths scenario "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/{{}}/programcode/nissan",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"{{}}",
										"programcode",
										"nissan"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "InfinitiGetdataById",
					"item": [
						{
							"name": "PostDataByReferenceidInfiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"PostDataByReferenceidInfiniti Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.test(\"PostDataByReferenceidInfiniti  VarName Value\", function () { pm.expect(jsonData[0].VarName).to.eql(\"User-to-User\"); });\r",
											"    pm.test(\"PostDataByReferenceidInfiniti  VarName Value\", function () { pm.expect(jsonData[0].Value).to.contain(\"00524f4144534944457e3233303133323032327e34322e3430367e2d37312e303734327e314e34414c334150304b433035353432317e656e\"); });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"programcode\":\"infiniti\",\r\n\"language\": \"en\",\r\n\"referenceid\": \"230132022\",\r\n \"geolocation\": \"42.406~-71.0742~400;enc-param=token\",\r\n \"vin\": \"1N4AL3AP0KC055421\"\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus200Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var today = new Date().toJSON().slice(0,10).replace(/-/g,'-');\r",
											"console.log(today);\r",
											"var d = new Date();\r",
											"var hour = d.getUTCHours();\r",
											"if (hour >= 0 && hour < 10) \r",
											"{hour = \"0\" + hour;\r",
											"}\r",
											"var min = d.getUTCMinutes();\r",
											"if (min >= 0 && min < 10) \r",
											"{min = \"0\" + min;\r",
											"}\r",
											"var time = hour + \":\" + min; \r",
											"console.log(time);\r",
											"console.log(time + Date);\r",
											"\r",
											"var timestamp = today + \"T\" + time; \r",
											"console.log(timestamp);\r",
											"//var env = pm.environment.get(\"env\");\r",
											"//console.log(env);\r",
											"//if (env === \"qa\") {\r",
											"//}\r",
											"//else {\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.language).to.eql(\"en\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"infiniti\");});\r",
											"\t\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.version).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(\"230132022\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(today);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.eql(time);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(timestamp);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.odometer).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(0.0);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(0.0);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"1N4AL3AP0KC055421\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand).to.eql(null);});\r",
											"\t\t\r",
											"\t\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Infiniti data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});\r",
											"    //}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/230132022/programcode/infiniti",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"230132022",
										"programcode",
										"infiniti"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403_NoKeyInfiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_NoKeyInfiniti  Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403VW  data.msisdn\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/230132022/programcode/infiniti",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"230132022",
										"programcode",
										"infiniti"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403_WrongKeyInfiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_WrongKeyInfiniti  Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403VW  data.msisdn\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "RctjkExrMD73k7S1dYE4C7XxbQ6mR28Y9l3yydet",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/230132022/programcode/infiniti",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"230132022",
										"programcode",
										"infiniti"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestBadRequestHttpstatus400Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByIdRequestBadRequestHttpstatus400Infiniti   Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByIdRequestBadRequestHttpstatus400Infiniti   errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByIdRequestBadRequestHttpstatus400Infiniti   errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByIdRequestBadRequestHttpstatus400Infiniti   errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											"pm.test(\"GetDataByIdRequestBadRequestHttpstatus400Infiniti errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/230132022/programcode/Infiniti",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"230132022",
										"programcode",
										"Infiniti"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestNotFoundHttpstatus404Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByIdRequestNotFoundHttpstatus404Infiniti Status code is 404\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByIdRequestNotFoundHttpstatus404Infiniti errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"404\");}); \r",
											"   pm.test(\"GetDataByIdRequestNotFoundHttpstatus404Infiniti errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"NotFound\");}); \r",
											"   \r",
											"pm.test(\"GetDataByIdRequestNotFoundHttpstatus404Infiniti errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Not Found\");}); \r",
											"pm.test(\"GetDataByIdRequestNotFoundHttpstatus404Infiniti errors.detail Value\", function () {pm.expect(jsonData .errors [0].detail ).to.eql(\"No data found\");}); \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/{{}}/programcode/infiniti",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"{{}}",
										"programcode",
										"infiniti"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestInternalServererrorhttpstatus500Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Unable to assert this because the server needs to be down in order to test ths scenario "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/{{referenceId}}/infiniti",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"{{referenceId}}",
										"infiniti"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "infinitiAgentAssignment/Terminate",
					"item": [
						{
							"name": "AgentAssignmentHttpCode201Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"AgentAssignmentHttpCode201Infiniti Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"AgentAssignmentHttpCode201Infiniti data.reference_id\", function () {pm.expect(jsonData.data.reference_id).to.eql(\"1902317500\");});\r",
											"    pm.test(\"AgentAssignmentHttpCode201Infiniti data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"AgentAssignmentHttpCode201Infiniti data.agent_assigned value\", function () {pm.expect(jsonData.data.agent_assigned).to.eql(true);});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"infiniti\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentMissProgHttpCode400Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentMissProgHttpCode400Infinit iStatus code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Infiniti errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Infiniti errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Infiniti errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Infiniti errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Infiniti errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Infiniti errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentWithoutKeyHttpCode403Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentWithoutKeyHttpCode403Infiniti  Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentWithoutKeyHttpCode403Infiniti  message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"infiniti\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentWithWrongKeyHttpCode403Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentWithWrongKeyHttpCode403Infiniti  Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentWithWrongKeyHttpCode403Infiniti  message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "RctjkExrMD73k7S1dYE4C7XxbQ6mR28Y9l3yydeL1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"infiniti\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentWrongProgHttpCode400NInfiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Infiniti  Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Infiniti  errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Infiniti  errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Infiniti  errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Infiniti  errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Infiniti  errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Infiniti  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Infiniti  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche'\");}); "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"infiniti1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentMissIsAssignedCodeHttpCode400Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Infiniti  Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Infiniti  errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Infiniti  errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Infiniti  errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Infiniti  errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Infiniti  errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"isassigned\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Infiniti  errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"none is not an allowed value\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Infiniti  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.none.not_allowed\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": null,\r\n\t\"programcode\": \"infiniti\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentMissRefIdCodeHttpCode400Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Infiniti  Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Infiniti  errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Infiniti  errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Infiniti  errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Infiniti  errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Infiniti  errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"referenceid\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Infiniti  errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"ReferenceId cannot be null or empty\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Infiniti  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"infiniti\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateHttpCode201Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"TerminateHttpCode201Infiniti  Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"TerminateHttpCode201Infiniti  data.reference_id\", function () {pm.expect(jsonData.data.reference_id).to.eql(\"1902317500\");});\r",
											"    pm.test(\"TerminateHttpCode201Infiniti  data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"programcode\": \"infiniti\",\r\n\t\"reasoncode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateWithoutKeyHttpCode403Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"TerminateWithoutKeyHttpCode403Infiniti  Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"TerminateWithoutKeyHttpCode403Infiniti  message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"reasoncode\": \"\",\r\n\t\"programcode\": \"infiniti\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateWithWrongKeyHttpCode403Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"TerminateWithWrongKeyHttpCode403Infiniti  Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"TerminateWithWrongKeyHttpCode403Infiniti  message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "RctjkExrMD73k7S1dYE4C7XxbQ6mR28Y9l3yydeL1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"reasoncode\": \"\",\r\n\t\"programcode\": \"infiniti\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateMissRefIdCodeHttpCode400Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Infiniti  Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Infiniti  errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Infiniti  errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Infiniti  errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Infiniti  errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Infiniti  errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"referenceid\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Infiniti  errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"ReferenceId cannot be null or empty\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Infiniti  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"\",\r\n\t\"reasoncode\": \"\",\r\n\t\"programcode\": \"infiniti\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateMissProgCodeHttpCode400Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"TerminateMissProgCodeHttpCode400Infiniti Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Infiniti errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Infiniti errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Infiniti errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Infiniti errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Infiniti errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Infiniti errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Infiniti errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"reasoncode\": \"\",\r\n\t\"programcode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateWrongProgCodeHttpCode400Infiniti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"TerminateWrongProgCodeHttpCode400Infiniti  Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Infiniti  errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Infiniti  errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Infiniti  errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Infiniti  errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Infiniti  errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Infiniti  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Infiniti errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"reasoncode\": \"\",\r\n\t\"programcode\": \"infiniti1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "NissanAgentAssignment/Terminate",
					"item": [
						{
							"name": "AgentAssignmentHttpCode201Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"AgentAssignmentHttpCode201Nissan Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"AgentAssignmentHttpCode201Nissan data.reference_id\", function () {pm.expect(jsonData.data.reference_id).to.eql(\"1902317500\");});\r",
											"    pm.test(\"AgentAssignmentHttpCode201Nissan data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"AgentAssignmentHttpCode201Nissan data.agent_assigned value\", function () {pm.expect(jsonData.data.agent_assigned).to.eql(true);});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"nissan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentMissProgHttpCode400Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentMissProgHttpCode400Infinit iStatus code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Nissan errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Nissan errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Nissan errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Nissan errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Nissan errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"AgentAssignmentMissProgHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentWithoutKeyHttpCode403Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentWithoutKeyHttpCode403Nissan Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentWithoutKeyHttpCode403Nissan message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "RctjkExrMD73k7S1dYE4C7XxbQ6mR28Y9l3yydeL1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"nissan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentWithWrongKeyHttpCode403Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentWithWrongKeyHttpCode403Nissan Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentWithWrongKeyHttpCode403Nissan message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "RctjkExrMD73k7S1dYE4C7XxbQ6mR28Y9l3yydeL1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"nissan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentWrongProgHttpCode400Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Nissan Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Nissan errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Nissan errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Nissan errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Nissan errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Nissan errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"AgentAssignmentWrongProgHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"nissan1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentMissIsAssignedCodeHttpCode400Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Nissan Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Nissan errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Nissan errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Nissan errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Nissan errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Nissan errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"isassigned\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Nissan errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"none is not an allowed value\");});\r",
											"pm.test(\"AgentAssignmentMissIsAssignedCodeHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.none.not_allowed\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"isassigned\": null,\r\n\t\"programcode\": \"nissan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "AgentAssignmentMissRefIdCodeHttpCode400Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Nissan Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Nissan errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Nissan errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Nissan errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Nissan errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Nissan errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"referenceid\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Nissan errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"ReferenceId cannot be null or empty\");});\r",
											"pm.test(\"AgentAssignmentMissRefIdCodeHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"\",\r\n\t\"isassigned\": true,\r\n\t\"programcode\": \"nissan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateHttpCode201Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"TerminateHttpCode201Nissan Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"TerminateHttpCode201Nissan data.reference_id\", function () {pm.expect(jsonData.data.reference_id).to.eql(\"1902317500\");});\r",
											"    pm.test(\"TerminateHttpCode201Nissan data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"programcode\": \"nissan\",\r\n\t\"reasoncode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateWithoutKeyHttpCode403Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"TerminateWithoutKeyHttpCode403Nissan Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"TerminateWithoutKeyHttpCode403Nissan message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"reasoncode\": \"\",\r\n\t\"programcode\": \"nissan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateWithWrongKeyHttpCode403Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"TerminateWithWrongKeyHttpCode403Nissan Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"TerminateWithWrongKeyHttpCode403Nissan message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "RctjkExrMD73k7S1dYE4C7XxbQ6mR28Y9l3yydeL1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"reasoncode\": \"\",\r\n\t\"programcode\": \"nissan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateMissRefIdCodeHttpCode400Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Nissan Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Nissan errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Nissan errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Nissan errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Nissan errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Nissan errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"referenceid\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Nissan errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"ReferenceId cannot be null or empty\");});\r",
											"pm.test(\"TerminateMissRefIdCodeHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"\",\r\n\t\"reasoncode\": \"\",\r\n\t\"programcode\": \"nissan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateMissProgCodeHttpCode400Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"TerminateMissProgCodeHttpCode400Nissan Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Nissan errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Nissan errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Nissan errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Nissan errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Nissan errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"TerminateMissProgCodeHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"reasoncode\": \"\",\r\n\t\"programcode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminateWrongProgCodeHttpCode400Nissan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"TerminateWrongProgCodeHttpCode400Nissan Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Nissan errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Nissan errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Nissan errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Nissan errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Nissan errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"TerminateWrongProgCodeHttpCode400Nissan errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"referenceid\": \"{{referenceId}}\",\r\n\t\"reasoncode\": \"\",\r\n\t\"programcode\": \"nissan1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "VWCarnet",
			"item": [
				{
					"name": "VWCarnet2.0GetDataByMsisdn",
					"item": [
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus200VW2.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.language).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"vwcarnet\");});\r",
											"\t\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.version).to.eql(\"2.0\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(\"5243583607\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-09-25\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.eql(\"19:05\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contains(\"2020-09-25T19:05:00\");});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.odometer).to.eql(16114);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(\"Kilometers\");});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(37.532918);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-122.272576 );});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(\"NORTH EAST\");});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"1VWSA7A3XLC011823\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.brandname).to.eql(\"VW\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelname).to.eql(\"Passat\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelyear).to.eql(\"2020\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelcode).to.eql(\"A342P6\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modeldesc).to.eql(\"Passat_2020\");});\r",
											"\t\r",
											"\t\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW2.0  data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/{{msisdn}}/programcode/vwcarnet/ctsversion/2.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"{{msisdn}}",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"2.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403_WrongKeyVW2.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_WrongKeyVW2.0 Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403VW  data.msisdn\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "785ws1ns0lxrycglpwgkafv2i9pzs",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "RctjkExrMD73k7S1dYE4C7XxbQ6mR28Y9l3yydet",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/{{msisdn}}/programcode/vwcarnet/ctsversion/2.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"{{msisdn}}",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"2.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403_NoKeyVW2.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_NoKeyVW2.0 Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_WrongKeyVW  data.msisdn\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/{{msisdn}}/programcode/vwcarnet/ctsversion/2.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"{{msisdn}}",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"2.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].detail.location[0] ).to.eql(\"msisdn\");}); \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].detail.message ).to.eql(\"Msisdn character length should be minimum 10 digit numbers\");}); \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].detail.type ).to.eql(\"value_error\");}); \r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/{{msisdnBad}}/programcode/vwcarnet/ctsversion/2.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"{{msisdnBad}}",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"2.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadNameRequestHttpstatus400VW2.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].detail.location[0] ).to.eql(\"path\");}); \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW2.0  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});\r",
											"\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "{{X-API-KEY}}"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/{{msisdnBad}}/programcode/Por/ctsversion/2.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"{{msisdnBad}}",
										"programcode",
										"Por",
										"ctsversion",
										"2.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestNotFoundHttpstatus404VW2.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404VW2.0 Status code is 404\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"404\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"NotFound\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Not Found\");}); \r",
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404VW2.0 errors.status Value\", function () {pm.expect(jsonData .errors [0].detail ).to.eql(\"MSISDN_NOT_FOUND, Unknown Error Situation\");}); \r",
											"\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/{{msisdnNotfound}}/programcode/vwcarnet/ctsversion/2.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"{{msisdnNotfound}}",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"2.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestInternalServererrorhttpstatus500VW2.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Unable to assert this because the server needs to be down in order to test ths scenario \r",
											"var timestamp = Math.round((new Date()).getTime() / 1000);\r",
											"console.log (timestamp + '152');\r",
											"pm.environment.set(\"UTC\",timestamp + '152');\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/{{msisdn}}/programcode/vwcarnet/ctsversion/2.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"{{msisdn}}",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"2.0"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "VWCarnet1.0GetDataByMsisdn",
					"item": [
						{
							"name": "SaveVehicleDataHttpCode201Maserati_VWCarnet1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" \r",
											"    pm.test(\"SaveVehicleDataHttpCode201Maserati_VWCarnet1.0  Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataHttpCode201Maserati_VWCarnet1.0 data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"5243583695\");});\r",
											"    pm.test(\"SaveVehicleDataHttpCode201Maserati_VWCarnet1.0 data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataHttpCode201Maserati_VWCarnet1.0 data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 5243583695\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"msisdn\": \"5243583695\",\r\n    \"programcode\": \"vwcarnet\",\r\n    \"event_datetime\": {{UTC}},\r\n    \"timestamp\": \"2020-01-07T13:44:32.000000\",\r\n    \"calldate\": \"02/23/2021\",\r\n    \"calltime\": \"07:02:32\",\r\n    \"odometer\":null,\r\n    \"odometerscale\":null,\r\n    \"latitude\": 37.532918,\r\n    \"longitude\": -122.272576,\r\n    \"headingdirection\": \"North\",\r\n    \"vin\": \"1VWSA7A3XLC011823\",\r\n    \"brand\": \"vw\",\r\n    \"modelname\": \"Passat\",\r\n    \"modelyear\": \"2008\",\r\n    \"modelcode\": \"vw\",\r\n    \"modeldesc\":null,\r\n    \"countrycode\": \"US\",\r\n    \"activationtype\":null,\r\n    \"market\":null,\r\n    \"mileage\":null,\r\n    \"mileageunit\":null,\r\n    \"customerfirstname\": \"JUSTINE\",\r\n    \"customerlastname\": \"EHLERS\",\r\n    \"modelcolor\": \"Pure White\",\r\n    \"srnumber\": \"1-13220115574\",\r\n    \"ismoving\":false,\r\n    \"cruisingrange\": \"385.25 Miles\",\r\n    \"locationtrueness\": \"weak\",\r\n    \"locationconfidence\": 2,\r\n    \"locationaddress\": \"12345 TE 123th Way\",\r\n    \"locationcity\": \"Redmond\",\r\n    \"locationstate\": \"WA\",\r\n    \"locationpostalcode\": \"98052-1019\",\r\n    \"phonenumber\": \"4258811803\",\r\n    \"altitude\": 542,\r\n    \"language\": \"English\",\r\n    \"status\": \"SUCCESS\",\r\n    \"responsemessage\": \"Successfully retrieved\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/5243583695/programcode/vwcarnet/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"5243583695",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus200VW1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//var env = pm.environment.get(\"env\");\r",
											"//console.log(env);\r",
											"//if (env === \"qa\") {\r",
											"//}\r",
											"//else {\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(\"US\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.language).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"vwcarnet\");});\r",
											"\t\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.version).to.eql(\"1.0\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(\"5243583695\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-01-07\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.eql(\"13:44\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.eql(\"2020-01-07T13:44:32+00:00\");});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.odometer).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(37.532918);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-122.272576 );});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(\"North\");});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"1VWSA7A3XLC011823\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.brandname).to.eql(\"vw\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelname).to.eql(\"Passat\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelyear).to.eql(\"2008\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelcode).to.eql(\"vw\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modeldesc).to.eql(null);});\r",
											"\t\r",
											"\t\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200VW1.0   data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});\r",
											"  //  }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/5243583695/programcode/vwcarnet/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"5243583695",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus200VW1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"path\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"CVGatewayResponseHttpStatusCodes400_BadRequest errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"CVGatewayResponseHttpStatusCodes400_BadRequest errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/5243583695/programcode/Prch/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"5243583695",
										"programcode",
										"Prch",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"path\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400VW1.0 errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"CVGatewayResponseHttpStatusCodes400_BadRequest errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"CVGatewayResponseHttpStatusCodes400_BadRequest errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/5243583695/programcode/Prch/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"5243583695",
										"programcode",
										"Prch",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400_10lengthVW1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_10lengthVW1.0   status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_10lengthVW1.0  errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_10lengthVW1.0  errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_10lengthVW1.0  errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_10lengthVW1.0  errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"pm.test(\"CVGatewayResponseHttpStatusCodes400_BadRequest errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/524358369/programcode/vwcarnet/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"524358369",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400__msisdn_stringValueVW1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400__msisdn_stringValueVW1.0 value status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400__msisdn_stringValueVW1.0 value errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400__msisdn_stringValueVW1.0 value errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400__msisdn_stringValueVW1.0 value errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400__msisdn_stringValueVW1.0 value errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400__msisdn_stringValueVW1.0 errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/msisdnumber/programcode/vwcarnet/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"msisdnumber",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400_IncorrectVersionVW1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_IncorrectVersionVW1.0 version_incorrect version status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_IncorrectVersionVW1.0 version errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_IncorrectVersionVW1.0 version errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_IncorrectVersionVW1.0 version errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_IncorrectVersionVW1.0 version errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"path\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_IncorrectVersionVW1.0 version errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"ctsversion\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_IncorrectVersionVW1.0 version errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"value is not a valid enumeration member; permitted: '1.0', '2.0'\");});\r",
											"pm.test(\"CVGatewayResponseHttpStatusCodes400_BadRequest errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/6813403885/programcode/vwcarnet/ctsversion/1.1",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"6813403885",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"1.1"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403_NoKeyVW1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_NoKeyVW1.0 Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_NoKeyVW1.0 message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/6813403885/programcode/vwcarnet/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"6813403885",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403_WrongKeyVW1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_WrongKeyVW1.0 Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_WrongKeyVW1.0 message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "785ws1ns0lxrycglpwgkafv2i9pzs",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/6813403885/programcode/vwcarnet/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"6813403885",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestNotFoundHttpstatus404VW1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404VW1.0 status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404VW1.0 errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"404\");});\r",
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404VW1.0 errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\");});\r",
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404VW1.0 errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\");});\r",
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404VW1.0 errors[0].detail value\", function () {pm.expect(jsonData.errors[0].detail).to.eql(\"Failed Execution, No data found \");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/6813403885/programcode/vwcarnet/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"6813403885",
										"programcode",
										"vwcarnet",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "FiatChryslerAutomobiles_1.0",
			"item": [
				{
					"name": "FCAGetDataByMsisdn_Maserati",
					"item": [
						{
							"name": "SaveVehicleDataMSISDNHttpCode201Maserati",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataHttpCode201Maserati Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataHttpCode201Maserati data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"17074907816\");});\r",
											"    pm.test(\"SaveVehicleDataHttpCode201Maserati data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataHttpCode201Maserati data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 17074907816\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"MASERATI\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17074907816/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17074907816",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.header.\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(\"US\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.language).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"fca\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.version).to.eql(\"1.0\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(\"17074907816\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tif (env = \"qa\") {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"else {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.odometer).to.eql(0);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"if (env = \"qa\") {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.65658950805664);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.2258071899414);});\r",
											"}\r",
											"else {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.6710090637207);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.09999084472656);});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"ZAM57ZSA1M1348445\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.brandname).to.eql(\"MASERATI\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelname).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelyear).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelcode).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modeldesc).to.eql(null);});\r",
											"\t\r",
											"\t\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati11Digit data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17074907816/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17074907816",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.header.\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(\"US\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.language).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"fca\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.version).to.eql(\"1.0\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(\"17074907816\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tif (env = \"qa\") {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"else {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.odometer).to.eql(0);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"if (env = \"qa\") {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.65658950805664);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.2258071899414);});\r",
											"}\r",
											"else {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.6710090637207);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.09999084472656);});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"ZAM57ZSA1M1348445\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.brandname).to.eql(\"MASERATI\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelname).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelyear).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelcode).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modeldesc).to.eql(null);});\r",
											"\t\r",
											"\t\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Maserati10Digit data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/7074907816/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"7074907816",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With--",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.header.\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(\"US\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.language).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"fca\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.version).to.eql(\"1.0\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(\"17074907816\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tif (env = \"qa\") {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"else {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.odometer).to.eql(0);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"if (env = \"qa\") {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.65658950805664);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.2258071899414);});\r",
											"}\r",
											"else {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.6710090637207);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.09999084472656);});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"ZAM57ZSA1M1348445\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.brandname).to.eql(\"MASERATI\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelname).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelyear).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelcode).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modeldesc).to.eql(null);});\r",
											"\t\r",
											"\t\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200MaseratiWith10dig With-- data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});\r",
											"   "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/1-707-490-7816/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"1-707-490-7816",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400Maserati9digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400Maserati9digit  Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400Maserati9digit  errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400Maserati9digit  errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400Maserati9digit  errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400Maserati9digit  error.detail.message\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn character length should be minimum 10 digit numbers\");});\r",
											"  pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400Maserati9digit  error.detail.type\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/176084164/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"176084164",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403MaseratiWrongKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403MaseratiWrongKey Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403MaseratiWrongKey  data.msisdn\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "dS9m27BVI88a4OyU1e29sxPQv6MIVeH4nYv2bPpT",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17608416476/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17608416476",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiStringNumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiStringNumeric  Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiStringNumeric  errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiStringNumeric  errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiStringNumeric  errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiStringNumeric  error.detail.message\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn has non numeric characters\");});\r",
											"  pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiStringNumeric  error.detail.type\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/1617417AA1/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"1617417AA1",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiString",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiString   Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiString   errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiString   errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiString   errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiString   error.detail.message\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn has non numeric characters\");});\r",
											"  pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiString   error.detail.type\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/qadftrewqaf/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"qadftrewqaf",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiWrongProgCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiWrongProgCode  Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiWrongProgCode  errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiWrongProgCode  errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiWrongProgCode  errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiWrongProgCode  error.detail.type\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400MaseratiWrongProgCode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17608416476/programcode/vw/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17608416476",
										"programcode",
										"vw",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403MaseratiNoKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"   \r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403MaseratiNoKey  Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403MaseratiNoKey  data.msisdn\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17608416476/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17608416476",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestNotFoundHttpstatus404Maserati",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404Maserati Status code is 404\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404Maserati errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"404\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404Maserati errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"NotFound\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404Maserati errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Not Found\");}); \r",
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404Maserati errors.detail Value\", function () {pm.expect(jsonData .errors [0].detail ).to.eql(\"Record with specified msisdn does not exist\");}); \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/2145987452/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"2145987452",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestInternalServererrorhttpstatus500Maserati",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Unable to assert this because the server needs to be down in order to test ths scenario "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17608416476/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17608416476",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "FCA -SaveVehicleData_Maserati",
					"item": [
						{
							"name": "SaveVehicleDataBRAND_ASSISTHttpCode201Maserati_10Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataBRAND_ASSISTHttpCode201Maserati_10Digit Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataBRAND_ASSISTHttpCode201Maserati_10Digit data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"5487458745\");});\r",
											"    pm.test(\"SaveVehicleDataBRAND_ASSISTHttpCode201Maserati_10Digit data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataBRAND_ASSISTHttpCode201Maserati_10Digit data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 5487458745\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"EventID\":\"BcallData\",\r\n  \"Version\":\"1.0\",\r\n  \"Timestamp\":1606764386353,\r\n  \"Data\":{\r\n      \"callCenterNumber\":\"+18449232963\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.6812744140625,\r\n      \"longitude\":-83.21455383300781,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n          \"callCenterNumber\":\"+18449232963\",\r\n          \"CallReasonEnum\":\"DEFAULT\",\r\n          \"callTriggerEnum\":\"MANUAL\",\r\n          \"calltype\":\"BRAND\",\r\n          \"daysRemainingForNextService\":0,\r\n          \"device\":{\r\n              \"deviceType\":\"ENUM\",\r\n              \"deviceOS\":\"QNX\",\r\n              \"headUnitType\":\"\",\r\n              \"manufacturerName\":\"\",\r\n              \"region\":\"NAFTA\",\r\n              \"screenSize\":\"Five\",\r\n              \"tbmSerialNum\":\"\",\r\n              \"tbmPartNum\":\"\",\r\n              \"tbmHardwareVersion\":\"\",\r\n              \"tbmSoftwareVersion\":\"\",\r\n              \"simIccid\":\"89011704272514889067\",\r\n              \"simImsi\":\"\",\r\n              \"simMsisdn\":\"12482026960\",\r\n              \"nadImei\":\"860871040000484\",\r\n              \"nadHardwareVersion\":\"\",\r\n              \"nadSoftwareVersion\":\"\",\r\n              \"nadSerialNum\":\"\",\r\n              \"nadPartNum\":\"\",\r\n              \"wifiMac\":\"\",\r\n              \"huSerialNum\":\"\",\r\n              \"huPartNum\":\"\",\r\n              \"huHardwareVersion\":\"\",\r\n              \"huSoftwareVersion\":\"\",\r\n              \"isHUNavigationPresent\":false\r\n            },\r\n      \"distanceRemainingForNextService\":0,\r\n      \"errorTellTale\":null,\r\n      \"fuelRemaining\":0.0,\r\n      \"stateofCharge\":0.0,\r\n      \"tirePressure\":null,\r\n      \"vehicleInfo\":{\r\n          \"vehicleLocation\":{\r\n          \"positionLatitude\":42.6812744140625,\r\n          \"positionLongitude\":-83.21455383300781,\r\n          \"estimatedPositionError\":0,\r\n          \"positionAltitude\":0.0,\r\n          \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n          \"isGPSFixNotAvailable\":false,\r\n          \"estimatedAltitudeError\":0,\r\n          \"positionDirection\":0.0\r\n      },\r\n      \"vehicleSpeed\":0.0,\r\n      \"odometer\":0,\r\n      \"engineStatusEnum\":\"RUN\",\r\n      \"language\":\"en_US\",\r\n      \"country\":\"US\",\r\n      \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n      \"vin\":\"1C4RJKBG4M81030HT\",\r\n      \"brand\":\"MASERATI\",\r\n      \"model\":\"\",\r\n      \"year\":\"\"\r\n    }\r\n}\r\n}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/5487458745/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"5487458745",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataROADSIDE_ASSISTHttpCode201Maserati_11Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Maserati_11Digit Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Maserati_11Digit data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"15487458745\");});\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Maserati_11Digit data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Maserati_11Digit data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 15487458745\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"EventID\":\"BcallData\",\r\n    \"Version\":\"1.0\",\r\n    \"Timestamp\":1556627876800,\r\n    \"Data\":{\r\n        \"callCenterNumber\":\"+390110039927\",\r\n        \"bcallType\":\"ROADSIDE_ASSIST\",\r\n        \"callTrigger\":\"MANUAL\",\r\n        \"callReason\":\"DEFAULT\",\r\n        \"language\":\"\",\r\n        \"latitude\":42.255403,\r\n        \"longitude\":-71.026318,\r\n        \"fuelRemaining\":17.771294,\r\n        \"engineStatus\":\"CUSTOM_EXTENSION\",\r\n        \"customExtension\":{\r\n            \"vehicleDataUpload\":{\r\n                \"vehicleInfo\":{\r\n                    \"vehicleLocation\":{\r\n                        \"positionLatitude\":42.255403,\r\n                        \"positionLongitude\":-71.026318,\r\n                        \"estimatedPositionError\":23,\r\n                        \"positionAltitude\":491.6000061035156,\r\n                        \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n                        \"estimatedAltitudeError\":0,\r\n                        \"positionDirection\":0,\r\n                        \"isGPSFixNotAvailable\":false\r\n                    },\r\n                    \"vehicleSpeed\":0,\r\n                    \"odometer\":0,\r\n                    \"engineStatusEnum\":\"STOP\",\r\n                    \"language\":\"\",\r\n                    \"country\":\"CZ\",\r\n                    \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n                    \"vin\":\"3D7KA28CX4G228689\",\r\n                    \"brand\":\"MASERATI\",\r\n                    \"model\":\"Compass\",\r\n                    \"year\":\"2018\"\r\n            },\r\n            \"tirePressure\":{\r\n                \"flTirePressure\":20.612543,\r\n                \"frTirePressure\":38.0422,\r\n                \"rlTirePressure\":28.725098,\r\n                \"rrTirePressure\":17.93378,\r\n                \"rl2TirePressure\":0,\r\n                \"rr2TirePressure\":0,\r\n                \"flTireSts\":\"NORMAL\",\r\n                \"frTireSts\":\"NORMAL\",\r\n                \"rlTireSts\":\"NORMAL\",\r\n                \"rrTireSts\":\"NORMAL\"\r\n            },\r\n          \"fuelRemaining\":17.771294,\r\n          \"errorTellTale\":{\r\n            \"isOilPressure\":true\r\n          },\r\n          \"stateofCharge\":31.896240234375,\r\n          \"daysRemainingForNextService\":141,\r\n          \"distanceRemainingForNextService\":15060,\r\n          \"callCenterNumber\":\"UNKNOWN\",\r\n          \"calltype\":\"BRAND\",\r\n          \"callTriggerEnum\":\"MANUAL\",\r\n          \"CallReasonEnum\":\"DEFAULT\"\r\n          }\r\n        }\r\n        }\r\n        }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/15487458745/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"15487458745",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpBRAND_ASSISTCode201Maserati_11DigitWith-",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataHttpBRAND_ASSISTCode201Maserati_11DigitWith- Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataHttpBRAND_ASSISTCode201Maserati_11DigitWith- data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"15648745888\");});\r",
											"    pm.test(\"SaveVehicleDataHttpBRAND_ASSISTCode201Maserati_11DigitWith- data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataHttpBRAND_ASSISTCode201Maserati_11DigitWith- data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 15648745888\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"EventID\":\"BcallData\",\r\n  \"Version\":\"1.0\",\r\n  \"Timestamp\":1606764386353,\r\n  \"Data\":{\r\n      \"callCenterNumber\":\"+18449232963\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.6812744140625,\r\n      \"longitude\":-83.21455383300781,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n          \"callCenterNumber\":\"+18449232963\",\r\n          \"CallReasonEnum\":\"DEFAULT\",\r\n          \"callTriggerEnum\":\"MANUAL\",\r\n          \"calltype\":\"BRAND\",\r\n          \"daysRemainingForNextService\":0,\r\n          \"device\":{\r\n              \"deviceType\":\"ENUM\",\r\n              \"deviceOS\":\"QNX\",\r\n              \"headUnitType\":\"\",\r\n              \"manufacturerName\":\"\",\r\n              \"region\":\"NAFTA\",\r\n              \"screenSize\":\"Five\",\r\n              \"tbmSerialNum\":\"\",\r\n              \"tbmPartNum\":\"\",\r\n              \"tbmHardwareVersion\":\"\",\r\n              \"tbmSoftwareVersion\":\"\",\r\n              \"simIccid\":\"89011704272514889067\",\r\n              \"simImsi\":\"\",\r\n              \"simMsisdn\":\"12482026960\",\r\n              \"nadImei\":\"860871040000484\",\r\n              \"nadHardwareVersion\":\"\",\r\n              \"nadSoftwareVersion\":\"\",\r\n              \"nadSerialNum\":\"\",\r\n              \"nadPartNum\":\"\",\r\n              \"wifiMac\":\"\",\r\n              \"huSerialNum\":\"\",\r\n              \"huPartNum\":\"\",\r\n              \"huHardwareVersion\":\"\",\r\n              \"huSoftwareVersion\":\"\",\r\n              \"isHUNavigationPresent\":false\r\n            },\r\n      \"distanceRemainingForNextService\":0,\r\n      \"errorTellTale\":null,\r\n      \"fuelRemaining\":0.0,\r\n      \"stateofCharge\":0.0,\r\n      \"tirePressure\":null,\r\n      \"vehicleInfo\":{\r\n          \"vehicleLocation\":{\r\n          \"positionLatitude\":42.6812744140625,\r\n          \"positionLongitude\":-83.21455383300781,\r\n          \"estimatedPositionError\":0,\r\n          \"positionAltitude\":0.0,\r\n          \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n          \"isGPSFixNotAvailable\":false,\r\n          \"estimatedAltitudeError\":0,\r\n          \"positionDirection\":0.0\r\n      },\r\n      \"vehicleSpeed\":0.0,\r\n      \"odometer\":0,\r\n      \"engineStatusEnum\":\"RUN\",\r\n      \"language\":\"en_US\",\r\n      \"country\":\"US\",\r\n      \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n      \"vin\":\"1C4RJKBG4M81030HT\",\r\n      \"brand\":\"MASERATI\",\r\n      \"model\":\"\",\r\n      \"year\":\"\"\r\n    }\r\n}\r\n}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/15648745888/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"15648745888",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataROADSIDE_ASSISTHttpCode201Maserati_10Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Maserati_10Digit Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Maserati_10Digit data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"4155673978\");});\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Maserati_10Digit data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Maserati_10Digit data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 4155673978\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1606849529702,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18669691041\",\r\n      \"bcallType\":\"ROADSIDE_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.67100524902344,\r\n      \"longitude\":-83.0999755859375,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"vehicleDataUpload\":{\r\n            \"callCenterNumber\":\"+18669691041\",\r\n            \"CallReasonEnum\":\"DEFAULT\",\r\n            \"callTriggerEnum\":\"MANUAL\",\r\n            \"calltype\":\"BRAND\",\r\n            \"daysRemainingForNextService\":0,\r\n            \"device\":{\r\n               \"deviceType\":\"ENUM\",\r\n               \"deviceOS\":\"QNX\",\r\n               \"headUnitType\":\"\",\r\n               \"manufacturerName\":\"\",\r\n               \"region\":\"NAFTA\",\r\n               \"screenSize\":\"Five\",\r\n               \"tbmSerialNum\":\"\",\r\n               \"tbmPartNum\":\"\",\r\n               \"tbmHardwareVersion\":\"\",\r\n               \"tbmSoftwareVersion\":\"\",\r\n               \"simIccid\":\"89011704272519496322\",\r\n               \"simImsi\":\"\",\r\n               \"simMsisdn\":\"1-415-567-3978\",\r\n               \"nadImei\":\"015395000737897\",\r\n               \"nadHardwareVersion\":\"\",\r\n               \"nadSoftwareVersion\":\"\",\r\n               \"nadSerialNum\":\"\",\r\n               \"nadPartNum\":\"\",\r\n               \"wifiMac\":\"\",\r\n               \"huSerialNum\":\"\",\r\n               \"huPartNum\":\"\",\r\n               \"huHardwareVersion\":\"\",\r\n               \"huSoftwareVersion\":\"\",\r\n               \"isHUNavigationPresent\":false\r\n            },\r\n            \"distanceRemainingForNextService\":0,\r\n            \"fuelRemaining\":0.0,\r\n            \"stateofCharge\":0.0,\r\n            \"vehicleInfo\":{\r\n               \"vehicleLocation\":{\r\n                  \"positionLatitude\":42.67100524902344,\r\n                  \"positionLongitude\":-83.0999755859375,\r\n                  \"estimatedPositionError\":0,\r\n                  \"positionAltitude\":0.0,\r\n                  \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n                  \"isGPSFixNotAvailable\":false,\r\n                  \"estimatedAltitudeError\":0,\r\n                  \"positionDirection\":0.0\r\n               },\r\n               \"vehicleSpeed\":0.0,\r\n               \"odometer\":0,\r\n               \"engineStatusEnum\":\"RUN\",\r\n               \"language\":\"en_US\",\r\n               \"country\":\"US\",\r\n               \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n               \"vin\":\"ZN661XUAXMX348998\",\r\n               \"brand\":\"MASERATI\",\r\n               \"model\":\"\",\r\n               \"year\":\"\"\r\n            }\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/4155673978/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"4155673978",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpROADSIDE_ASSISTCode201Maserati_11DigitWith",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataHttpROADSIDE_ASSISTCode201Maserati_11DigitWith Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataHttpROADSIDE_ASSISTCode201Maserati_11DigitWith data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"1-415-567-3978\");});\r",
											"    pm.test(\"SaveVehicleDataHttpROADSIDE_ASSISTCode201Maserati_11DigitWith data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataHttpROADSIDE_ASSISTCode201Maserati_11DigitWith data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 1-415-567-3978\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"1-415-567-3978\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"MASERATI\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/1-415-567-3978/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"1-415-567-3978",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataByMsisdnRequestSuccesshttpStatus403MaseratiNoKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataByMsisdnRequestSuccesshttpStatus403MaseratiNoKey Status code is 201\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataByMsisdnRequestSuccesshttpStatus403MaseratiNoKey data.reference_id\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"   \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"fr_CA\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"MASERATI\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17608416476/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17608416476",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode404Maserati",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SaveVehicleDataHttpCode404Maserati  Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode404Maserati  errors.status Value\", function () { pm.expect(jsonData.errors[0].status).to.eql(\"404\"); });\r",
											"pm.test(\"SaveVehicleDataHttpCode404Maserati  errors.code Value\", function () { pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\"); });\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode404Maserati  errors.title Value\", function () { pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\"); });\r",
											"pm.test(\"SaveVehicleDataHttpCode404Maserati  errors.detail Value\", function () { pm.expect(jsonData.errors[0].detail).to.eql(\"Missing Resource URI\"); });\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"MASERATI\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fca/ctsversi/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fca",
										"ctsversi",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode400MaseratiWrongVersion",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongVersion Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongVersion errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongVersion errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongVersion errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongVersion errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"path\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongVersion errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"ctsversion\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongVersion errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"value is not a valid enumeration member; permitted: '1.0', '2.0'\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongVersion errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"MASERATI\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fca/ctsversion/1.",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fca",
										"ctsversion",
										"1."
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode400MaseratiWrongPROGCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongPROGCode Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongPROGCode errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongPROGCode errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongPROGCode errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongPROGCode errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"path\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongPROGCode errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongPROGCode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400MaseratiWrongPROGCode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"MASERATI\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fc/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fc",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode403MaseratiNoApiKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SaveVehicleDataHttpCode403MaseratiNoApiKey Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode403MaseratiNoApiKey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"MASERATI\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode403MaseratiWrongAPIKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SaveVehicleDataHttpCode403MaseratiWrongAPIKey  Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode403MaseratiWrongAPIKey  message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "9Ny2PvH7QaaThXM1K7ReXXgS4N2jMd5p5UrNPM90",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"MASERATI\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode500Maserati",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Unable to assert this because the server needs to be down in order to test ths scenario "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"MASERATI\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "FCAGetDataByMsisdn_Jeep",
					"item": [
						{
							"name": "SaveVehicleDataMSISDNHttpCode201Jeep",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataMSISDNHttpCode201Jeep Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataMSISDNHttpCode201Jeep data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"12482026960\");});\r",
											"    pm.test(\"SaveVehicleDataMSISDNHttpCode201Jeep data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataMSISDNHttpCode201Jeep data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 12482026960\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"JEEP\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/12482026960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"12482026960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.header.\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(\"US\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.language).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"fca\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.version).to.eql(\"1.0\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(\"12482026960\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tif (env = \"qa\") {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"else {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.odometer).to.eql(0);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"if (env = \"qa\") {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.65658950805664);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.2258071899414);});\r",
											"}\r",
											"else {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.6710090637207);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.09999084472656);});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"ZAM57ZSA1M1348445\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.brandname).to.eql(\"JEEP\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelname).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelyear).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelcode).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modeldesc).to.eql(null);});\r",
											"\t\r",
											"\t\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep11_Digit data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/12482026960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"12482026960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit   Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.header.\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(\"US\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.language).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"fca\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.version).to.eql(\"1.0\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(\"12482026960\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tif (env = \"qa\") {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"else {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.odometer).to.eql(0);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"if (env = \"qa\") {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.65658950805664);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.2258071899414);});\r",
											"}\r",
											"else {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.6710090637207);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.09999084472656);});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"ZAM57ZSA1M1348445\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.brandname).to.eql(\"JEEP\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelname).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelyear).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelcode).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modeldesc).to.eql(null);});\r",
											"\t\r",
											"\t\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200Jeep10_Digit  data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/2482026960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"2482026960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.header.\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(\"US\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.language).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"fca\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.version).to.eql(\"1.0\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(\"12482026960\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tif (env = \"qa\") {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"else {\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2020-11-13\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.calltime).to.contains(\"19:09\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2020-11-13T19:09\");});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.odometer).to.eql(0);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"if (env = \"qa\") {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.65658950805664);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.2258071899414);});\r",
											"}\r",
											"else {\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.location.latitude).to.eql(42.6710090637207);});\r",
											"pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-83.09999084472656);});\r",
											"}\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"ZAM57ZSA1M1348445\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.brandname).to.eql(\"JEEP\");});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelname).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelyear).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modelcode).to.eql(null);});\r",
											"\tpm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.msisdn\", function () {pm.expect(jsonData.data.vehicle.brand.modeldesc).to.eql(null);});\r",
											"\t\r",
											"\t\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus200_JeepWith10dig With-  data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});\r",
											"   "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/1-248-202-6960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"1-248-202-6960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400_Jeep9digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_Jeep9digit   Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_Jeep9digit   errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_Jeep9digit   errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_Jeep9digit   errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_Jeep9digit   error.detail.message\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn character length should be minimum 10 digit numbers\");});\r",
											"  pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_Jeep9digit   error.detail.type\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/176084164/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"176084164",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403_JeepWrongKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_JeepWrongKey   Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_JeepWrongKey    data.msisdn\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "dS9m27BVI88a4OyU1e29sxPQv6MIVeH4nYv2bPpT",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17608416476/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17608416476",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400_JeepStringNumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepStringNumeric   Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepStringNumeric   errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepStringNumeric   errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepStringNumeric   errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepStringNumeric   error.detail.message\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn has non numeric characters\");});\r",
											"  pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepStringNumeric   error.detail.type\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/1617417AA1/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"1617417AA1",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400_JeepString",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepString Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepString errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepString errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepString errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepString error.detail.message\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn has non numeric characters\");});\r",
											"  pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepString error.detail.type\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/qadftrewqaf/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"qadftrewqaf",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestBadRequestHttpstatus400_JeepWrongProgCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepWrongProgCode  Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepWrongProgCode  errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepWrongProgCode  errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepWrongProgCode  errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepWrongProgCode  error.detail.type\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"GetDataByMsisdnRequestBadRequestHttpstatus400_JeepWrongProgCode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17608416476/programcode/vw/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17608416476",
										"programcode",
										"vw",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestSuccesshttpStatus403_JeepNoKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"   \r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_JeepNoKey  Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByMsisdnRequestSuccesshttpStatus403_JeepNoKey  data.msisdn\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17608416476/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17608416476",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestNotFoundHttpstatus404_Jeep",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404_Jeep  Status code is 404\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404_Jeep  errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"404\");}); \r",
											"   pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404_Jeep  errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"NotFound\");}); \r",
											"   \r",
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404_Jeep  errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Not Found\");}); \r",
											"pm.test(\"GetDataByMsisdnRequestNotFoundHttpstatus404_Jeep  errors.detail Value\", function () {pm.expect(jsonData .errors [0].detail ).to.eql(\"Record with specified msisdn does not exist\");}); \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/2145987452/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"2145987452",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByMsisdnRequestInternalServererrorhttpstatus500_Jeep",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Unable to assert this because the server needs to be down in order to test ths scenario "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/12482026960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"12482026960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "FCA -SaveVehicleData_Jeep",
					"item": [
						{
							"name": "SaveVehicleDataBRAND_ASSISTHttpCode201Jeep_10Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataBRAND_ASSISTHttpCode201Jeep_10Digit  Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataBRAND_ASSISTHttpCode201Jeep_10Digit  data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"2482026960\");});\r",
											"    pm.test(\"SaveVehicleDataBRAND_ASSISTHttpCode201Jeep_10Digit  data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataBRAND_ASSISTHttpCode201Jeep_10Digit  data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 2482026960\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1608562315064,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18449232963\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.681217193603516,\r\n      \"longitude\":-83.21456146240234,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18449232963\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272514889067\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"12482026960\",\r\n            \"nadImei\":\"860871040000484\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.681217193603516,\r\n               \"positionLongitude\":-83.21456146240234,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"1C4RJKBG4M81030HT\",\r\n            \"brand\":\"JEEP\",\r\n            \"model\":\"Gladiator\",\r\n            \"year\":\"2021\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/2482026960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"2482026960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpBRAND_ASSISTCode201Jeep_11DigitWith-",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataHttpBRAND_ASSISTCode201Jeep_11DigitWith-  Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataHttpBRAND_ASSISTCode201Jeep_11DigitWith-  data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"12482026960\");});\r",
											"    pm.test(\"SaveVehicleDataHttpBRAND_ASSISTCode201Jeep_11DigitWith-  data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataHttpBRAND_ASSISTCode201Jeep_11DigitWith-  data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 12482026960\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1608562315064,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18449232963\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.681217193603516,\r\n      \"longitude\":-83.21456146240234,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18449232963\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272514889067\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"12482026960\",\r\n            \"nadImei\":\"860871040000484\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.681217193603516,\r\n               \"positionLongitude\":-83.21456146240234,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"1C4RJKBG4M81030HT\",\r\n            \"brand\":\"JEEP\",\r\n            \"model\":\"Gladiator\",\r\n            \"year\":\"2021\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/12482026960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"12482026960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataBRAND_ASSISTHttpCode201Jeep_11Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_11Digit Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_11Digit data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"12482026960\");});\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_11Digit data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_11Digit data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 12482026960\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1556627876800,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+390110039927\",\r\n      \"bcallType\":\"ROADSIDE_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"\",\r\n      \"latitude\":36.143008,\r\n      \"longitude\":-86.762142,\r\n      \"fuelRemaining\":17.771294,\r\n      \"engineStatus\":\"CUSTOM_EXTENSION\",\r\n      \"customExtension\":{\r\n         \"vehicleDataUpload\":{\r\n            \"vehicleInfo\":{\r\n               \"vehicleLocation\":{\r\n                  \"positionLatitude\":36.143008,\r\n                  \"positionLongitude\":-86.762142,\r\n                  \"estimatedPositionError\":23,\r\n                  \"positionAltitude\":491.6000061035156,\r\n                  \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n                  \"estimatedAltitudeError\":0,\r\n                  \"positionDirection\":0,\r\n                  \"isGPSFixNotAvailable\":false\r\n               },\r\n               \"vehicleSpeed\":65,\r\n               \"odometer\":30000,\r\n               \"engineStatusEnum\":\"STOP\",\r\n               \"language\":\"ENG\",\r\n               \"country\":\"CZ\",\r\n               \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n               \"vin\":\"3C4NJDEB5MT517162\",\r\n               \"brand\":\"JEEP\",\r\n               \"model\":\"Compass\",\r\n               \"year\":\"2021\"\r\n            },\r\n            \"tirePressure\":{\r\n               \"flTirePressure\":20.612543,\r\n               \"frTirePressure\":38.0422,\r\n               \"rlTirePressure\":28.725098,\r\n               \"rrTirePressure\":17.93378,\r\n               \"rl2TirePressure\":0,\r\n               \"rr2TirePressure\":0,\r\n               \"flTireSts\":\"NORMAL\",\r\n               \"frTireSts\":\"NORMAL\",\r\n               \"rlTireSts\":\"NORMAL\",\r\n               \"rrTireSts\":\"NORMAL\"\r\n            },\r\n            \"fuelRemaining\":13.771294,\r\n            \"errorTellTale\":{\r\n               \"isOilPressure\":true\r\n            },\r\n            \"stateofCharge\":31.896240234375,\r\n            \"daysRemainingForNextService\":141,\r\n            \"distanceRemainingForNextService\":15060,\r\n            \"callCenterNumber\":\"UNKNOWN\",\r\n            \"calltype\":\"BRAND\",\r\n            \"callTriggerEnum\":\"MANUAL\",\r\n            \"CallReasonEnum\":\"DEFAULT\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/12482026960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"12482026960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_11Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_11Digit Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_11Digit data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"12482026960\");});\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_11Digit data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_11Digit data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 12482026960\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1556627876800,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+390110039927\",\r\n      \"bcallType\":\"ROADSIDE_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"\",\r\n      \"latitude\":36.143008,\r\n      \"longitude\":-86.762142,\r\n      \"fuelRemaining\":17.771294,\r\n      \"engineStatus\":\"CUSTOM_EXTENSION\",\r\n      \"customExtension\":{\r\n         \"vehicleDataUpload\":{\r\n            \"vehicleInfo\":{\r\n               \"vehicleLocation\":{\r\n                  \"positionLatitude\":36.143008,\r\n                  \"positionLongitude\":-86.762142,\r\n                  \"estimatedPositionError\":23,\r\n                  \"positionAltitude\":491.6000061035156,\r\n                  \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n                  \"estimatedAltitudeError\":0,\r\n                  \"positionDirection\":0,\r\n                  \"isGPSFixNotAvailable\":false\r\n               },\r\n               \"vehicleSpeed\":65,\r\n               \"odometer\":30000,\r\n               \"engineStatusEnum\":\"STOP\",\r\n               \"language\":\"ENG\",\r\n               \"country\":\"CZ\",\r\n               \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n               \"vin\":\"3C4NJDEB5MT517162\",\r\n               \"brand\":\"JEEP\",\r\n               \"model\":\"Compass\",\r\n               \"year\":\"2021\"\r\n            },\r\n            \"tirePressure\":{\r\n               \"flTirePressure\":20.612543,\r\n               \"frTirePressure\":38.0422,\r\n               \"rlTirePressure\":28.725098,\r\n               \"rrTirePressure\":17.93378,\r\n               \"rl2TirePressure\":0,\r\n               \"rr2TirePressure\":0,\r\n               \"flTireSts\":\"NORMAL\",\r\n               \"frTireSts\":\"NORMAL\",\r\n               \"rlTireSts\":\"NORMAL\",\r\n               \"rrTireSts\":\"NORMAL\"\r\n            },\r\n            \"fuelRemaining\":13.771294,\r\n            \"errorTellTale\":{\r\n               \"isOilPressure\":true\r\n            },\r\n            \"stateofCharge\":31.896240234375,\r\n            \"daysRemainingForNextService\":141,\r\n            \"distanceRemainingForNextService\":15060,\r\n            \"callCenterNumber\":\"UNKNOWN\",\r\n            \"calltype\":\"BRAND\",\r\n            \"callTriggerEnum\":\"MANUAL\",\r\n            \"CallReasonEnum\":\"DEFAULT\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/12482026960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"12482026960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_10Digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_10Digit   Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_10Digit   data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"2482026960\");});\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_10Digit   data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataROADSIDE_ASSISTHttpCode201Jeep_10Digit   data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 2482026960\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1556627876800,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+390110039927\",\r\n      \"bcallType\":\"ROADSIDE_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"\",\r\n      \"latitude\":36.143008,\r\n      \"longitude\":-86.762142,\r\n      \"fuelRemaining\":17.771294,\r\n      \"engineStatus\":\"CUSTOM_EXTENSION\",\r\n      \"customExtension\":{\r\n         \"vehicleDataUpload\":{\r\n            \"vehicleInfo\":{\r\n               \"vehicleLocation\":{\r\n                  \"positionLatitude\":36.143008,\r\n                  \"positionLongitude\":-86.762142,\r\n                  \"estimatedPositionError\":23,\r\n                  \"positionAltitude\":491.6000061035156,\r\n                  \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n                  \"estimatedAltitudeError\":0,\r\n                  \"positionDirection\":0,\r\n                  \"isGPSFixNotAvailable\":false\r\n               },\r\n               \"vehicleSpeed\":65,\r\n               \"odometer\":30000,\r\n               \"engineStatusEnum\":\"STOP\",\r\n               \"language\":\"ENG\",\r\n               \"country\":\"CZ\",\r\n               \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n               \"vin\":\"3C4NJDEB5MT517162\",\r\n               \"brand\":\"JEEP\",\r\n               \"model\":\"Compass\",\r\n               \"year\":\"2021\"\r\n            },\r\n            \"tirePressure\":{\r\n               \"flTirePressure\":20.612543,\r\n               \"frTirePressure\":38.0422,\r\n               \"rlTirePressure\":28.725098,\r\n               \"rrTirePressure\":17.93378,\r\n               \"rl2TirePressure\":0,\r\n               \"rr2TirePressure\":0,\r\n               \"flTireSts\":\"NORMAL\",\r\n               \"frTireSts\":\"NORMAL\",\r\n               \"rlTireSts\":\"NORMAL\",\r\n               \"rrTireSts\":\"NORMAL\"\r\n            },\r\n            \"fuelRemaining\":13.771294,\r\n            \"errorTellTale\":{\r\n               \"isOilPressure\":true\r\n            },\r\n            \"stateofCharge\":31.896240234375,\r\n            \"daysRemainingForNextService\":141,\r\n            \"distanceRemainingForNextService\":15060,\r\n            \"callCenterNumber\":\"UNKNOWN\",\r\n            \"calltype\":\"BRAND\",\r\n            \"callTriggerEnum\":\"MANUAL\",\r\n            \"CallReasonEnum\":\"DEFAULT\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/2482026960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"2482026960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpROADSIDE_ASSISTCode201Jeep_11DigitWith-",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataHttpROADSIDE_ASSISTCode201Jeep_11DigitWith-    Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataHttpROADSIDE_ASSISTCode201Jeep_11DigitWith-    data.reference_id\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"1-248-202-6960\");});\r",
											"    pm.test(\"SaveVehicleDataHttpROADSIDE_ASSISTCode201Jeep_11DigitWith-    data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"SaveVehicleDataHttpROADSIDE_ASSISTCode201Jeep_11DigitWith-    data.agent_assigned value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 1-248-202-6960\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"1-415-567-3978\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"JEEP\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/1-248-202-6960/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"1-248-202-6960",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataByMsisdnRequestSuccesshttpStatus403JeepNoKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehicleDataByMsisdnRequestSuccesshttpStatus403JeepNoKey   Status code is 201\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"SaveVehicleDataByMsisdnRequestSuccesshttpStatus403JeepNoKey   data.reference_id\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"   \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"fr_CA\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"JEEP\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17608416476/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17608416476",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode404Jeep",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SaveVehicleDataHttpCode404Jeep   Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode404Jeep   errors.status Value\", function () { pm.expect(jsonData.errors[0].status).to.eql(\"404\"); });\r",
											"pm.test(\"SaveVehicleDataHttpCode404Jeep   errors.code Value\", function () { pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\"); });\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode404Jeep   errors.title Value\", function () { pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\"); });\r",
											"pm.test(\"SaveVehicleDataHttpCode404Jeep   errors.detail Value\", function () { pm.expect(jsonData.errors[0].detail).to.eql(\"Missing Resource URI\"); });\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"JEEP\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fca/ctsversi/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fca",
										"ctsversi",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode400JeepWrongVersion",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongVersion  Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongVersion  errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongVersion  errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongVersion  errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongVersion  errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"path\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongVersion  errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"ctsversion\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongVersion  errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"value is not a valid enumeration member; permitted: '1.0', '2.0'\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongVersion  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"JEEP\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fca/ctsversion/1.",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fca",
										"ctsversion",
										"1."
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode400JeepWrongPROGCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongPROGCode  Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongPROGCode  errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongPROGCode  errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongPROGCode  errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongPROGCode  errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"path\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongPROGCode  errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongPROGCode  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"SaveVehicleDataHttpCode400JeepWrongPROGCode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"Jeep\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fc/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fc",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode403JeepNoApiKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SaveVehicleDataHttpCode403JeepNoApiKey  Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode403JeepNoApiKey  message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"Jeep\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode403JeepWrongAPIKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SaveVehicleDataHttpCode403JeepWrongAPIKey   Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehicleDataHttpCode403JeepWrongAPIKey   message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "9Ny2PvH7QaaThXM1K7ReXXgS4N2jMd5p5UrNPM90",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"Jeep\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode500Jeep",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Unable to assert this because the server needs to be down in order to test ths scenario "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"EventID\":\"BcallData\",\r\n   \"Version\":\"1.0\",\r\n   \"Timestamp\":1605294567314,\r\n   \"Data\":{\r\n      \"callCenterNumber\":\"+18773550336\",\r\n      \"bcallType\":\"BRAND_ASSIST\",\r\n      \"callTrigger\":\"MANUAL\",\r\n      \"callReason\":\"DEFAULT\",\r\n      \"language\":\"en_US\",\r\n      \"latitude\":42.65658950805664,\r\n      \"longitude\":-83.2258071899414,\r\n      \"fuelRemaining\":0.0,\r\n      \"engineStatus\":\"STARTED\",\r\n      \"customExtension\":{\r\n         \"callCenterNumber\":\"+18773550336\",\r\n         \"CallReasonEnum\":\"DEFAULT\",\r\n         \"callTriggerEnum\":\"MANUAL\",\r\n         \"calltype\":\"BRAND\",\r\n         \"daysRemainingForNextService\":0,\r\n         \"device\":{\r\n            \"deviceType\":\"ENUM\",\r\n            \"deviceOS\":\"QNX\",\r\n            \"headUnitType\":\"\",\r\n            \"manufacturerName\":\"\",\r\n            \"region\":\"NAFTA\",\r\n            \"screenSize\":\"Five\",\r\n            \"tbmSerialNum\":\"\",\r\n            \"tbmPartNum\":\"\",\r\n            \"tbmHardwareVersion\":\"\",\r\n            \"tbmSoftwareVersion\":\"\",\r\n            \"simIccid\":\"89011704272519496793\",\r\n            \"simImsi\":\"\",\r\n            \"simMsisdn\":\"16813403885\",\r\n            \"nadImei\":\"015395000275112\",\r\n            \"nadHardwareVersion\":\"\",\r\n            \"nadSoftwareVersion\":\"\",\r\n            \"nadSerialNum\":\"\",\r\n            \"nadPartNum\":\"\",\r\n            \"wifiMac\":\"\",\r\n            \"huSerialNum\":\"\",\r\n            \"huPartNum\":\"\",\r\n            \"huHardwareVersion\":\"\",\r\n            \"huSoftwareVersion\":\"\",\r\n            \"isHUNavigationPresent\":false\r\n         },\r\n         \"distanceRemainingForNextService\":0,\r\n         \"errorTellTale\":null,\r\n         \"fuelRemaining\":0.0,\r\n         \"stateofCharge\":0.0,\r\n         \"tirePressure\":null,\r\n         \"vehicleInfo\":{\r\n            \"vehicleLocation\":{\r\n               \"positionLatitude\":42.65658950805664,\r\n               \"positionLongitude\":-83.2258071899414,\r\n               \"estimatedPositionError\":0,\r\n               \"positionAltitude\":0.0,\r\n               \"gpsFixTypeEnum\":\"ID_FIX_NO_POS\",\r\n               \"isGPSFixNotAvailable\":false,\r\n               \"estimatedAltitudeError\":0,\r\n               \"positionDirection\":0.0\r\n            },\r\n            \"vehicleSpeed\":0.0,\r\n            \"odometer\":0,\r\n            \"engineStatusEnum\":\"RUN\",\r\n            \"language\":\"en_US\",\r\n            \"country\":\"US\",\r\n            \"vehicleType\":\"PASSENGER_CLASSM1\",\r\n            \"vin\":\"ZAM57ZSA1M1348445\",\r\n            \"brand\":\"Jeep\",\r\n            \"model\":\"\",\r\n            \"year\":\"\"\r\n         }\r\n      }\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/16813403885/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"16813403885",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								},
								"description": "FCA- Save Vehicle Data pushed by External Client Telematics system - Maserati"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "FCA- Terminate",
					"item": [
						{
							"name": "Accepted CallTerminateHttpCode201FCANoCountryCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"Accepted CallTerminateHttpCode201FCANoCountryCodeStatus code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"Accepted CallTerminateHttpCode201FCANoCountryCodedata.reference_id\", function () {pm.expect(jsonData.data.reference_id).to.eql(null);});\r",
											"    pm.test(\"Accepted CallTerminateHttpCode201FCANoCountryCodedata.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"Accepted CallTerminateHttpCode201FCANoCountryCodedata.msisdn value\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"3234826699\");});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{         \r\n            \r\n    \"callstatus\": \"TERMINATED\"\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate/3234826699/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate",
										"3234826699",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "Accepted CallTerminateHttpCode201FCACountryCode ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"Accepted CallTerminateHttpCode201FCACountryCode Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"Accepted CallTerminateHttpCode201FCACountryCode data.reference_id\", function () {pm.expect(jsonData.data.reference_id).to.eql(null);});\r",
											"    pm.test(\"Accepted CallTerminateHttpCode201FCACountryCode data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"Accepted CallTerminateHttpCode201FCACountryCode data.msisdn value\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"13234826699\");});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{         \r\n            \r\n    \"callstatus\": \"TERMINATED\"\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate/13234826699/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate",
										"13234826699",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "MsisdnDoesnotExistCallTerminateHttpCode404FCA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"MsisdnDoesnotExistCallTerminateHttpCode404FCA Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"MsisdnDoesnotExistCallTerminateHttpCode404FCA errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"404\");});\r",
											"pm.test(\"MsisdnDoesnotExistCallTerminateHttpCode404FCA errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\");});\r",
											"pm.test(\"MsisdnDoesnotExistCallTerminateHttpCode404FCA errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\");});\r",
											"pm.test(\"MsisdnDoesnotExistCallTerminateHttpCode404FCA errors[0].detail value\", function () {pm.expect(jsonData.errors[0].detail).to.eql(\"Record with specified msisdn does not exist\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"callstatus\":\"TERMINATED\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate/13234826690/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate",
										"13234826690",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "MsisdEmptyCallTerminateHttpCode400FCA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"MsisdEmptyCallTerminateHttpCode400FCA  Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"MsisdEmptyCallTerminateHttpCode400FCA  errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"MsisdEmptyCallTerminateHttpCode400FCA  errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"MsisdEmptyCallTerminateHttpCode400FCA  errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"MsisdEmptyCallTerminateHttpCode400FCA  errors[0].title value\", function () {pm.expect(jsonData.errors[0].detail).to.eql(\"callstatus in payload is missing or invalid\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{            \r\n          \r\n    \"callstatus\": \"\"\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate/13234826699/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate",
										"13234826699",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "MsisdNotAStringCallTerminateHttpCode404FCA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"MsisdNotAStringCallTerminateHttpCode404FCA  Status code is 400\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"MsisdNotAStringCallTerminateHttpCode404FCA  errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"404\");});\r",
											"pm.test(\"MsisdNotAStringCallTerminateHttpCode404FCA  errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\");});\r",
											"pm.test(\"MsisdNotAStringCallTerminateHttpCode404FCA  errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\");});\r",
											"\r",
											"pm.test(\"MsisdNotAStringCallTerminateHttpCode404FCA  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail).to.eql(\"Record with specified msisdn does not exist\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{            \r\n          \r\n    \"callstatus\": \"TERMINATED\"\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate/{{}}/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate",
										"{{}}",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "CallTerminateHttpCode403NoKeyFCA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CallTerminateHttpCode403NoKeyFCA  Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"CallTerminateHttpCode403NoKeyFCA  message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{            \r\n               \r\n    \"callstatus\": \"TERMINATED\"\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/stage/terminate/13234826699/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"stage",
										"terminate",
										"13234826699",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "CallTerminateHttpCode403BadKeyFCA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CallTerminateHttpCode403BadKeyFCA Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"CallTerminateHttpCode403BadKeyFCA message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"type": "text",
										"value": "dS9m27BVI88a4OyU1e29sxPQv6MIVeH4nYv2bPpL"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{            \r\n               \r\n    \"callstatus\": \"TERMINATED\"\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate/13234826699/programcode/fca/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate",
										"13234826699",
										"programcode",
										"fca",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "CallTerminateHttpCode500FCA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"if (env === \"qa\") {\r",
											"}\r",
											"else {\r",
											"    pm.test(\"CallTerminateHttpCode500FCA status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"\r",
											"var textdata = pm.response.text();\r",
											"\r",
											"\r",
											" pm.test(\"CallTerminateHttpCode500FCA value\", function () {pm.expect(textdata).to.eql(\"Internal Server Error\");});\r",
											"   \r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-KEY",
										"value": "{{X-API-KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{            \r\n               \r\n    \"callstatus\": \"TERMINATED\"\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate/6174171877/programcode/fca/ctsversion/2.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate",
										"6174171877",
										"programcode",
										"fca",
										"ctsversion",
										"2.0"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Porsche_1.0",
			"item": [
				{
					"name": "Porsche_SaveVehicleData",
					"item": [
						{
							"name": "SaveVehicleDataHttpCode200_11Digit_Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"SaveVehicleDataHttpCode200_11Digit_Porsche Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"    \r",
											"   pm.test(\"SaveVehicleDataHttpCode200_11Digit_Porsche data.msisdn\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"17608416476\");});\r",
											"    pm.test(\"SaveVehicleDataHttpCode200_11Digit_Porsche data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"SaveVehicleDataHttpCode200_11Digit_Porsche data.responsemessage\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 17608416476\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\":\"US\",\r\n    \"timestamp\":\"1536575714\",\r\n    \"gpsData\": {\r\n        \"latitude\":\"+40.67623\",\r\n        \"longitude\":\"-074.00076\"\r\n    },\r\n        \"vehicleData\": {\r\n            \"vin\":\"WP1AA2A24JKA06336\",\r\n            \"registration\": {\r\n                \"number\":\"GVW1649\",\r\n                \"stateCode\":\"NY\",\r\n                \"countryCode\":\"US\"\r\n        },\r\n                \"crankInhibition\":\"0\",\r\n                \"ignitionKey\":\"OFF\",\r\n                \"mileage\": {\r\n                    \"value\":\"3194\",\r\n                    \"unit\":\"mi\"\r\n        },\r\n                    \"fuelLevelPercentage\":\"98\",\r\n                    \"evBatteryPercentage\":\"0\",\r\n                    \"range\": {\"value\":\"419\",\"unit\":\"mi\"\r\n        },\r\n                    \"tyrePressureDelta\": {\r\n                        \"unit\":\"bar\",\r\n                        \"frontLeft\":\"-1.4\",\r\n                        \"frontRight\":\"+0\",\r\n                        \"rearLeft\":\"+0.1\",\r\n                        \"rearRight\":\"+0.1\"\r\n        }\r\n    },\r\n                        \"userData\": {\"phoneContact\":\"+176-084-16-476\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "SaveVehicleDataHttpCode200_10Digit_Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"SaveVehicleDataHttpCode200_10Digit_Porsche Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"    \r",
											"   pm.test(\"SaveVehicleDataHttpCode200_10Digit_Porsche data.msisdn\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"17608416476\");});\r",
											"    pm.test(\"SaveVehicleDataHttpCode200_10Digit_Porsche data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"SaveVehicleDataHttpCode200_10Digit_Porsche data.responsemessage\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 17608416476\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\":\"US\",\r\n    \"timestamp\":\"1536575714\",\r\n    \"gpsData\": {\r\n        \"latitude\":\"+40.67623\",\r\n        \"longitude\":\"-074.00076\"\r\n    },\r\n        \"vehicleData\": {\r\n            \"vin\":\"WP1AA2A24JKA06336\",\r\n            \"registration\": {\r\n                \"number\":\"GVW1649\",\r\n                \"stateCode\":\"NY\",\r\n                \"countryCode\":\"US\"\r\n        },\r\n                \"crankInhibition\":\"0\",\r\n                \"ignitionKey\":\"OFF\",\r\n                \"mileage\": {\r\n                    \"value\":\"3194\",\r\n                    \"unit\":\"mi\"\r\n        },\r\n                    \"fuelLevelPercentage\":\"98\",\r\n                    \"evBatteryPercentage\":\"0\",\r\n                    \"range\": {\"value\":\"419\",\"unit\":\"mi\"\r\n        },\r\n                    \"tyrePressureDelta\": {\r\n                        \"unit\":\"bar\",\r\n                        \"frontLeft\":\"-1.4\",\r\n                        \"frontRight\":\"+0\",\r\n                        \"rearLeft\":\"+0.1\",\r\n                        \"rearRight\":\"+0.1\"\r\n        }\r\n    },\r\n                        \"userData\": {\"phoneContact\":\"+7608416476\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "SaveVehData_empty_msisdnTerminateHttpCode400_Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehData_empty_versionCodeTerminateHttpCode400_Porsche status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehData_empty_versionCodeTerminateHttpCode400_Porsche errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"SaveVehData_empty_versionCodeTerminateHttpCode400_Porsche errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"SaveVehData_empty_versionCodeTerminateHttpCode400_Porsche errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"SaveVehData_empty_versionCodeTerminateHttpCode400_Porsche errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"pm.test(\"SaveVehData_empty_versionCodeTerminateHttpCode400_Porsche errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn cannot be null or empty\");});\r",
											"pm.test(\"SaveVehData_empty_versionCodeTerminateHttpCode400_Porsche errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\": \"US\",\r\n    \"timestamp\": \"1536575714\",\r\n    \"gpsData\": {\r\n        \"latitude\": \"+40.67623\",\r\n        \"longitude\": \"-074.00076\"\r\n    },\r\n    \"vehicleData\": {\r\n        \"vin\": \"WP1AA2A24JKA06336\",\r\n        \"registration\": {\r\n            \"number\": \"GVW1649\",\r\n            \"stateCode\": \"NY\",\r\n            \"countryCode\": \"US\"\r\n        },\r\n        \"crankInhibition\": \"0\",\r\n        \"ignitionKey\": \"OFF\",\r\n        \"mileage\": {\r\n            \"value\": \"3194\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"fuelLevelPercentage\": \"98\",\r\n        \"evBatteryPercentage\": \"0\",\r\n        \"range\": {\r\n            \"value\": \"419\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"tyrePressureDelta\": {\r\n            \"unit\": \"bar\",\r\n            \"frontLeft\": \"-1.4\",\r\n            \"frontRight\": \"+0\",\r\n            \"rearLeft\": \"+0.1\",\r\n            \"rearRight\": \"+0.1\"\r\n        }\r\n    },\r\n    \"userData\": {\r\n        \"phoneContact\": \"+\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "SaveVehData_msisdn_lessthan10charTerminateHttpCode400_Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehData_msisdn_lessthan10charTerminateHttpCode400_Porsche status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehData_msisdn_lessthan10charTerminateHttpCode400_Porsche errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"SaveVehData_msisdn_lessthan10charTerminateHttpCode400_Porsche errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"SaveVehData_msisdn_lessthan10charTerminateHttpCode400_Porsche errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"SaveVehData_msisdn_lessthan10charTerminateHttpCode400_Porsche errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"pm.test(\"SaveVehData_msisdn_lessthan10charTerminateHttpCode400_Porsche errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn character length should be minimum 10 digit numbers\");});\r",
											"pm.test(\"SaveVehData_msisdn_lessthan10charTerminateHttpCode400_Porsche errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\": \"US\",\r\n    \"timestamp\": \"1536575714\",\r\n    \"gpsData\": {\r\n        \"latitude\": \"+40.67623\",\r\n        \"longitude\": \"-074.00076\"\r\n    },\r\n    \"vehicleData\": {\r\n        \"vin\": \"WP1AA2A24JKA06336\",\r\n        \"registration\": {\r\n            \"number\": \"GVW1649\",\r\n            \"stateCode\": \"NY\",\r\n            \"countryCode\": \"US\"\r\n        },\r\n        \"crankInhibition\": \"0\",\r\n        \"ignitionKey\": \"OFF\",\r\n        \"mileage\": {\r\n            \"value\": \"3194\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"fuelLevelPercentage\": \"98\",\r\n        \"evBatteryPercentage\": \"0\",\r\n        \"range\": {\r\n            \"value\": \"419\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"tyrePressureDelta\": {\r\n            \"unit\": \"bar\",\r\n            \"frontLeft\": \"-1.4\",\r\n            \"frontRight\": \"+0\",\r\n            \"rearLeft\": \"+0.1\",\r\n            \"rearRight\": \"+0.1\"\r\n        }\r\n    },\r\n    \"userData\": {\r\n        \"phoneContact\": \"+760841646\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "SaveVehDataNonNumericMsisdnTerminateHttpCode400_Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"SaveVehDataNonNumericMsisdnTerminateHttpCode400_Porsche status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehDataNonNumericMsisdnTerminateHttpCode400_Porsche errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"SaveVehDataNonNumericMsisdnTerminateHttpCode400_Porsche errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"SaveVehDataNonNumericMsisdnTerminateHttpCode400_Porsche errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"SaveVehData_incorrect_versionCodeTerminateHttpCode400_Porsche errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"pm.test(\"SaveVehData_incorrect_versionCodeTerminateHttpCode400_Porsche errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn has non numeric characters\");});\r",
											"pm.test(\"SaveVehData_incorrect_versionCodeTerminateHttpCode400_Porsche errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\":\"US\",\r\n    \"timestamp\":\"1536575714\",\r\n    \"gpsData\": {\r\n        \"latitude\":\"+40.67623\",\r\n        \"longitude\":\"-074.00076\"\r\n    },\r\n        \"vehicleData\": {\r\n            \"vin\":\"WP1AA2A24JKA06336\",\r\n            \"registration\": {\r\n                \"number\":\"GVW1649\",\r\n                \"stateCode\":\"NY\",\r\n                \"countryCode\":\"US\"\r\n        },\r\n                \"crankInhibition\":\"0\",\r\n                \"ignitionKey\":\"OFF\",\r\n                \"mileage\": {\r\n                    \"value\":\"3194\",\r\n                    \"unit\":\"mi\"\r\n        },\r\n                    \"fuelLevelPercentage\":\"98\",\r\n                    \"evBatteryPercentage\":\"0\",\r\n                    \"range\": {\"value\":\"419\",\"unit\":\"mi\"\r\n        },\r\n                    \"tyrePressureDelta\": {\r\n                        \"unit\":\"bar\",\r\n                        \"frontLeft\":\"-1.4\",\r\n                        \"frontRight\":\"+0\",\r\n                        \"rearLeft\":\"+0.1\",\r\n                        \"rearRight\":\"+0.1\"\r\n        }\r\n    },\r\n                        \"userData\": {\"phoneContact\":\"7608416476/\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "SaveVehDataWrongKeyCodeTerminateHttpCode403_Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehDataWrongKeyCodeTerminateHttpCode403_Porsche Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"SaveVehDataWrongKeyCodeTerminateHttpCode403_Porsche message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "785ws1ns0lxrycglpwgkafv2i9pzs",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\": \"US\",\r\n    \"timestamp\": \"1536575714\",\r\n    \"gpsData\": {\r\n        \"latitude\": \"+40.67623\",\r\n        \"longitude\": \"-074.00076\"\r\n    },\r\n    \"vehicleData\": {\r\n        \"vin\": \"WP1AA2A24JKA06336\",\r\n        \"registration\": {\r\n            \"number\": \"GVW1649\",\r\n            \"stateCode\": \"NY\",\r\n            \"countryCode\": \"US\"\r\n        },\r\n        \"crankInhibition\": \"0\",\r\n        \"ignitionKey\": \"OFF\",\r\n        \"mileage\": {\r\n            \"value\": \"3194\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"fuelLevelPercentage\": \"98\",\r\n        \"evBatteryPercentage\": \"0\",\r\n        \"range\": {\r\n            \"value\": \"419\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"tyrePressureDelta\": {\r\n            \"unit\": \"bar\",\r\n            \"frontLeft\": \"-1.4\",\r\n            \"frontRight\": \"+0\",\r\n            \"rearLeft\": \"+0.1\",\r\n            \"rearRight\": \"+0.1\"\r\n        }\r\n    },\r\n    \"userData\": {\r\n        \"phoneContact\": \"+12019161720\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "SaveVehData_NoKeyCodeTerminateHttpCode403_Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"SaveVehData_NoKeyCodeTerminateHttpCode403_Porsche Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehData_NoKeyCodeTerminateHttpCode403_Porsche message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\": \"US\",\r\n    \"timestamp\": \"1536575714\",\r\n    \"gpsData\": {\r\n        \"latitude\": \"+40.67623\",\r\n        \"longitude\": \"-074.00076\"\r\n    },\r\n    \"vehicleData\": {\r\n        \"vin\": \"WP1AA2A24JKA06336\",\r\n        \"registration\": {\r\n            \"number\": \"GVW1649\",\r\n            \"stateCode\": \"NY\",\r\n            \"countryCode\": \"US\"\r\n        },\r\n        \"crankInhibition\": \"0\",\r\n        \"ignitionKey\": \"OFF\",\r\n        \"mileage\": {\r\n            \"value\": \"3194\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"fuelLevelPercentage\": \"98\",\r\n        \"evBatteryPercentage\": \"0\",\r\n        \"range\": {\r\n            \"value\": \"419\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"tyrePressureDelta\": {\r\n            \"unit\": \"bar\",\r\n            \"frontLeft\": \"-1.4\",\r\n            \"frontRight\": \"+0\",\r\n            \"rearLeft\": \"+0.1\",\r\n            \"rearRight\": \"+0.1\"\r\n        }\r\n    },\r\n    \"userData\": {\r\n        \"phoneContact\": \"+12019161720\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "SaveVehDataNotFoundTerminateHttpCode404_Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"SaveVehDataNotFoundTerminateHttpCode404_Porsche status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"SaveVehDataNotFoundTerminateHttpCode404_Porsche errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"404\");});\r",
											"pm.test(\"SaveVehDataNotFoundTerminateHttpCode404_Porsche errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\");});\r",
											"pm.test(\"SaveVehDataNotFoundTerminateHttpCode404_Porsche errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\");});\r",
											"pm.test(\"SaveVehDataNotFoundTerminateHttpCode404_Porsche errors[0].detail value\", function () {pm.expect(jsonData.errors[0].detail).to.eql(\"Missing Resource URI\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\": \"US\",\r\n    \"timestamp\": \"1536575714\",\r\n    \"gpsData\": {\r\n        \"latitude\": \"+40.67623\",\r\n        \"longitude\": \"-074.00076\"\r\n    },\r\n    \"vehicleData\": {\r\n        \"vin\": \"WP1AA2A24JKA06336\",\r\n        \"registration\": {\r\n            \"number\": \"GVW1649\",\r\n            \"stateCode\": \"NY\",\r\n            \"countryCode\": \"US\"\r\n        },\r\n        \"crankInhibition\": \"0\",\r\n        \"ignitionKey\": \"OFF\",\r\n        \"mileage\": {\r\n            \"value\": \"3194\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"fuelLevelPercentage\": \"98\",\r\n        \"evBatteryPercentage\": \"0\",\r\n        \"range\": {\r\n            \"value\": \"419\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"tyrePressureDelta\": {\r\n            \"unit\": \"bar\",\r\n            \"frontLeft\": \"-1.4\",\r\n            \"frontRight\": \"+0\",\r\n            \"rearLeft\": \"+0.1\",\r\n            \"rearRight\": \"+0.1\"\r\n        }\r\n    },\r\n    \"userData\": {\r\n        \"phoneContact\": \"+12019161725\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinf",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinf"
									]
								}
							},
							"response": []
						},
						{
							"name": "SaveVehDataInternalServerErrorCodeTerminateHttpCode500_Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "dS9m27BVI88a4OyU1e29sxPQv6MIVeH4nYv2bPp4",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\": \"US\",\r\n    \"timestamp\": \"1536575714\",\r\n    \"gpsData\": {\r\n        \"latitude\": \"+40.67623\",\r\n        \"longitude\": \"-074.00076\"\r\n    },\r\n    \"vehicleData\": {\r\n        \"vin\": \"WP1AA2A24JKA06336\",\r\n        \"registration\": {\r\n            \"number\": \"GVW1649\",\r\n            \"stateCode\": \"NY\",\r\n            \"countryCode\": \"US\"\r\n        },\r\n        \"crankInhibition\": \"0\",\r\n        \"ignitionKey\": \"OFF\",\r\n        \"mileage\": {\r\n            \"value\": \"3194\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"fuelLevelPercentage\": \"98\",\r\n        \"evBatteryPercentage\": \"0\",\r\n        \"range\": {\r\n            \"value\": \"419\",\r\n            \"unit\": \"mi\"\r\n        },\r\n        \"tyrePressureDelta\": {\r\n            \"unit\": \"bar\",\r\n            \"frontLeft\": \"-1.4\",\r\n            \"frontRight\": \"+0\",\r\n            \"rearLeft\": \"+0.1\",\r\n            \"rearRight\": \"+0.1\"\r\n        }\r\n    },\r\n    \"userData\": {\r\n        \"phoneContact\": \"+12019161720\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Porsche_GetDataByMsisdn",
					"item": [
						{
							"name": "GetDataByIdRequestSuccesshttpStatus200Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											" pm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.countrycode value\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(\"US\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.language value\", function () {pm.expect(jsonData.data.header.language).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.programcode value\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"porsche\");});\r",
											"\t\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.version value\", function () {pm.expect(jsonData.data.header.version).to.eql(\"1.0\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.referenceid value\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.eventid value\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.msisdn value\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(\"17608416476\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.calltype value\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.eventtype value\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.calldate value\", function () {pm.expect(jsonData.data.header.calldate).to.eql(\"2018-09-10\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.calltime value\", function () {pm.expect(jsonData.data.header.calltime).to.eql(\"10:35\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.timestamp value\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(\"2018-09-10T10:35:14+00:00\");});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.odometer value\", function () {pm.expect(jsonData.data.header.odometer).to.eql(null);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.header.odometerscale value\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.location.latitude value\", function () {pm.expect(jsonData.data.location.latitude).to.eql(40.67623);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.location.longitude value\", function () {pm.expect(jsonData.data.location.longitude).to.eql(-74.00076);});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.location.headingdirection value\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.vehicle.vin value\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"WP1AA2A24JKA06336\");});\r",
											"\tpm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.vehicle.brand.brandname value\", function () {pm.expect(jsonData.data.vehicle.brand.brandname).to.eql(\"PORSCHE\");});\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.vehicle.brand.modelname value\", function () {pm.expect(jsonData.data.vehicle.brand.modelname).to.eql(null);});\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.vehicle.brand.modelyear value\", function () {pm.expect(jsonData.data.vehicle.brand.modelyear).to.eql(null);});\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.vehicle.brand.modelcode value\", function () {pm.expect(jsonData.data.vehicle.brand.modelcode).to.eql(null);});\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.vehicle.brand.modelddesc value\", function () {pm.expect(jsonData.data.vehicle.brand.modeldesc).to.eql(null);});\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.vehicle.mileage value\", function () {pm.expect(jsonData.data.vehicle.mileage).to.eql(3194);});\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.vehicle.mileageunit value\", function () {pm.expect(jsonData.data.vehicle.mileageunit).to.eql(\"Miles\");});\r",
											"    \r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus200Porsche data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/17608416476/programcode/porsche/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"17608416476",
										"programcode",
										"porsche",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus400Porsche_9digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_9digit status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_9digit errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_9digit errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_9digit errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_9digit errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_9digit errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn character length should be minimum 10 digit numbers\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_9digit errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/760841646/programcode/porsche/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"760841646",
										"programcode",
										"porsche",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string_Numeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string_Numeric status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string_Numeric errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string_Numeric errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string_Numeric errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string_Numeric errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string_Numeric errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn has non numeric characters\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string_Numeric errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/760841646sdf/programcode/porsche/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"760841646sdf",
										"programcode",
										"porsche",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn has non numeric characters\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_msisdn_string errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/dfgdfgsffds/programcode/porsche/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"dfgdfgsffds",
										"programcode",
										"porsche",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Programcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Programcode status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Programcode errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Programcode errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Programcode errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Programcode errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"path\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Programcode errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Programcode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Programcode  errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/7608416476/programcode/prsche/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"7608416476",
										"programcode",
										"prsche",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Version status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Version errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Version errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Version errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Version errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"path\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Version errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"ctsversion\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Version errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"value is not a valid enumeration member; permitted: '1.0', '2.0'\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus400Porsche_incorrect_Version errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/7608416476/programcode/porsche/ctsversion/0.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"7608416476",
										"programcode",
										"porsche",
										"ctsversion",
										"0.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus403Porsche_NoKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus403Porsche_NoKey Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus403Porsche_NoKey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/7608416476/programcode/porsche/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"7608416476",
										"programcode",
										"porsche",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus403Porsche_WrongKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus403Porsche_NoKey Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus403Porsche_NoKey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "785ws1ns0lxrycglpwgkafv2i9pzs",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/7608416476/programcode/porsche/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"7608416476",
										"programcode",
										"porsche",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus404Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus404Porsche status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus404Porsche errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"404\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus404Porsche errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus404Porsche errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\");});\r",
											"pm.test(\"GetDataByIdRequestSuccesshttpStatus404Porsche errors[0].detail value\", function () {pm.expect(jsonData.errors[0].detail).to.eql(\"No data found\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/6813403885/programcode/porsche/ctsversion/1.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"6813403885",
										"programcode",
										"porsche",
										"ctsversion",
										"1.0"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetDataByIdRequestSuccesshttpStatus500Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"GetDataByIdRequestSuccesshttpStatus500Porsche status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"\r",
											"var textdata = pm.response.text();\r",
											"\r",
											"\r",
											" pm.test(\"GetDataByIdRequestSuccesshttpStatus500Porsche value\", function () {pm.expect(textdata).to.eql(\"Internal Server Error\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/7608416476/programcode/porsche/ctsversion/2.0",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"7608416476",
										"programcode",
										"porsche",
										"ctsversion",
										"2.0"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Porsche_New_endpoint_GetData",
					"item": [
						{
							"name": "CVGatewaySaveVehicleDataHttpCode200_11Digit_Porsche",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"SaveVehicleDataHttpCode200_11Digit_Porsche Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"    \r",
											"   pm.test(\"SaveVehicleDataHttpCode200_11Digit_Porsche data.msisdn\", function () {pm.expect(jsonData.data.msisdn).to.eql(\"17608416497\");});\r",
											"    pm.test(\"SaveVehicleDataHttpCode200_11Digit_Porsche data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"SaveVehicleDataHttpCode200_11Digit_Porsche data.responsemessage\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully saved the vehicledata for msisdn: 17608416497\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\":\"US\",\r\n    \"timestamp\":\"1536575714\",\r\n    \"gpsData\": {\r\n        \"latitude\":\"+40.67623\",\r\n        \"longitude\":\"-074.00076\"\r\n    },\r\n        \"vehicleData\": {\r\n            \"vin\":\"WP1AA2A24JKA06336\",\r\n            \"registration\": {\r\n                \"number\":\"GVW1649\",\r\n                \"stateCode\":\"NY\",\r\n                \"countryCode\":\"US\"\r\n        },\r\n                \"crankInhibition\":\"0\",\r\n                \"ignitionKey\":\"OFF\",\r\n                \"mileage\": {\r\n                    \"value\":\"3194\",\r\n                    \"unit\":\"mi\"\r\n        },\r\n                    \"fuelLevelPercentage\":\"98\",\r\n                    \"evBatteryPercentage\":\"0\",\r\n                    \"range\": {\"value\":\"419\",\"unit\":\"mi\"\r\n        },\r\n                    \"tyrePressureDelta\": {\r\n                        \"unit\":\"bar\",\r\n                        \"frontLeft\":\"-1.4\",\r\n                        \"frontRight\":\"+0\",\r\n                        \"rearLeft\":\"+0.1\",\r\n                        \"rearRight\":\"+0.1\"\r\n        }\r\n    },\r\n                        \"userData\": {\"phoneContact\":\"+176-084-16-497\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact countrycode value\", function () {pm.expect(jsonData.countryCode).to.eql(\"US\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact timestamp value\", function () {pm.expect(jsonData.timestamp).to.eql(\"1536575714\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact gpsData.latitude value\", function () {pm.expect(jsonData.gpsData.latitude).to.eql(\"+40.67623\");});\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact gpsData.longitude value\", function () {pm.expect(jsonData.gpsData.longitude).to.eql(\"-074.00076\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.vin value\", function () {pm.expect(jsonData.vehicleData.vin).to.eql(\"WP1AA2A24JKA06336\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.registration.number value\", function () {pm.expect(jsonData.vehicleData.registration.number).to.eql(\"GVW1649\");});\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.registration.stateCode value\", function () {pm.expect(jsonData.vehicleData.registration.stateCode).to.eql(\"NY\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.registration.countryCode value\", function () {pm.expect(jsonData.vehicleData.registration.countryCode).to.eql(\"US\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.crankInhibition value\", function () {pm.expect(jsonData.vehicleData.crankInhibition).to.eql(\"0\");});\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.ignitionKey value\", function () {pm.expect(jsonData.vehicleData.ignitionKey).to.eql(\"OFF\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.mileage.value value\", function () {pm.expect(jsonData.vehicleData.mileage.value).to.eql(\"3194\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.mileage.unit value\", function () {pm.expect(jsonData.vehicleData.mileage.unit).to.contain(\"mi\");});\r",
											"\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.fuelLevelPercentage value\", function () {pm.expect(jsonData.vehicleData.fuelLevelPercentage).to.eql(\"98\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.evBatteryPercentage value\", function () {pm.expect(jsonData.vehicleData.evBatteryPercentage).to.eql(\"0\");});\r",
											"\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.range.value value\", function () {pm.expect(jsonData.vehicleData.range.value).to.eql(\"419\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.range.unit value\", function () {pm.expect(jsonData.vehicleData.range.unit).to.eql(\"mi\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.tyrePressureDelta.unit value\", function () {pm.expect(jsonData.vehicleData.tyrePressureDelta.unit).to.eql(\"bar\");});\r",
											"\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.tyrePressureDelta.frontLeft value\", function () {pm.expect(jsonData.vehicleData.tyrePressureDelta.frontLeft).to.eql(\"-1.4\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.tyrePressureDelta.frontRight value\", function () {pm.expect(jsonData.vehicleData.tyrePressureDelta.frontRight).to.eql(\"+0\");});\r",
											"    pm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.tyrePressureDelta.rearLeft value\", function () {pm.expect(jsonData.vehicleData.tyrePressureDelta.rearLeft).to.eql(\"+0.1\");});\r",
											"    pm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact vehicleData.tyrePressureDelta.rearRight value\", function () {pm.expect(jsonData.vehicleData.tyrePressureDelta.rearRight).to.eql(\"+0.1\");});\r",
											"    pm.test(\"CVGatewayGetDataRequestPorsche200Success_10digitPhonecontact userData.phoneContact value\", function () {pm.expect(jsonData.userData.phoneContact).to.eql(\"+176-084-16-497\");});\r",
											"   "
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo?phonecontact=7608416497",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									],
									"query": [
										{
											"key": "phonecontact",
											"value": "7608416497"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CVGatewayGetDataRequestPorsche200Success_11digitPhonecontact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta   Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta   countrycode value\", function () {pm.expect(jsonData.countryCode).to.eql(\"US\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta   timestamp value\", function () {pm.expect(jsonData.timestamp).to.eql(\"1536575714\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta   gpsData.latitude value\", function () {pm.expect(jsonData.gpsData.latitude).to.eql(\"+40.67623\");});\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta   gpsData.longitude value\", function () {pm.expect(jsonData.gpsData.longitude).to.eql(\"-074.00076\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.vin value\", function () {pm.expect(jsonData.vehicleData.vin).to.eql(\"WP1AA2A24JKA06336\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.registration.number value\", function () {pm.expect(jsonData.vehicleData.registration.number).to.eql(\"GVW1649\");});\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.registration.stateCode value\", function () {pm.expect(jsonData.vehicleData.registration.stateCode).to.eql(\"NY\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.registration.countryCode value\", function () {pm.expect(jsonData.vehicleData.registration.countryCode).to.eql(\"US\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.crankInhibition value\", function () {pm.expect(jsonData.vehicleData.crankInhibition).to.eql(\"0\");});\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.ignitionKey value\", function () {pm.expect(jsonData.vehicleData.ignitionKey).to.eql(\"OFF\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.mileage.value value\", function () {pm.expect(jsonData.vehicleData.mileage.value).to.eql(\"3194\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.mileage.unit value\", function () {pm.expect(jsonData.vehicleData.mileage.unit).to.contain(\"mi\");});\r",
											"\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.fuelLevelPercentage value\", function () {pm.expect(jsonData.vehicleData.fuelLevelPercentage).to.eql(\"98\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.evBatteryPercentage value\", function () {pm.expect(jsonData.vehicleData.evBatteryPercentage).to.eql(\"0\");});\r",
											"\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.range.value value\", function () {pm.expect(jsonData.vehicleData.range.value).to.eql(\"419\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.range.unit value\", function () {pm.expect(jsonData.vehicleData.range.unit).to.eql(\"mi\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.tyrePressureDelta.unit value\", function () {pm.expect(jsonData.vehicleData.tyrePressureDelta.unit).to.eql(\"bar\");});\r",
											"\t\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.tyrePressureDelta.frontLeft value\", function () {pm.expect(jsonData.vehicleData.tyrePressureDelta.frontLeft).to.eql(\"-1.4\");});\r",
											"\tpm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.tyrePressureDelta.frontRight value\", function () {pm.expect(jsonData.vehicleData.tyrePressureDelta.frontRight).to.eql(\"+0\");});\r",
											"    pm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.tyrePressureDelta.rearLeft value\", function () {pm.expect(jsonData.vehicleData.tyrePressureDelta.rearLeft).to.eql(\"+0.1\");});\r",
											"    pm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  vehicleData.tyrePressureDelta.rearRight value\", function () {pm.expect(jsonData.vehicleData.tyrePressureDelta.rearRight).to.eql(\"+0.1\");});\r",
											"    pm.test(\"CVGatewayGetDataRequestPorsche200Success_11digitPhoneconta  userData.phoneContact value\", function () {pm.expect(jsonData.userData.phoneContact).to.eql(\"+176-084-16-497\");});\r",
											"   "
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo?phonecontact=17608416497",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									],
									"query": [
										{
											"key": "phonecontact",
											"value": "17608416497"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CVGatewayGetDataRequestPorsche400BadRequest_phonecontact_9digit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_phonecontact_9digit status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_phonecontact_9digit errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_phonecontact_9digit errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_phonecontact_9digit errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_phonecontact_9digit errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"// pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequest errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_phonecontact_9digit errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn character length should be minimum 10 digit numbers\");});\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_phonecontact_9digit errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo?phonecontact=760841646",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									],
									"query": [
										{
											"key": "phonecontact",
											"value": "760841646"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CVGatewayGetDataRequestPorsche400BadRequest_msisdn_string_Numeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_msisdn_string_Numeric status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_msisdn_string_Numeric errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_msisdn_string_Numeric errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_msisdn_string_Numeric errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_msisdn_string_Numeric errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_msisdn_string_Numeric errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn has non numeric characters\");});\r",
											"pm.test(\"CVGatewayGetDataRequestPorsche400BadRequest_msisdn_string_Numeric errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo?phonecontact=+7608416497asdf",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									],
									"query": [
										{
											"key": "phonecontact",
											"value": "+7608416497asdf"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CV Gateway-Get Data Request_Porsche_400_BadRequest_msisdn_string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequest_msisdn_string status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequest_msisdn_string errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequest_msisdn_string errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequest_msisdn_string errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequest_msisdn_string errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequest_msisdn_string errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn has non numeric characters\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequest_msisdn_string errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo?phonecontact=dfgdfgsffds",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									],
									"query": [
										{
											"key": "phonecontact",
											"value": "dfgdfgsffds"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CV Gateway-Get Data Request_Porsche_400_BadRequet_blank_phonecontact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequet_blank_phonecontact status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequet_blank_phonecontact errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequet_blank_phonecontact errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequet_blank_phonecontact errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequet_blank_phonecontact errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"msisdn\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequet_blank_phonecontact errors[0].detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Msisdn cannot be null or empty\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_400_BadRequet_blank_phonecontact errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo?phonecontact=",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									],
									"query": [
										{
											"key": "phonecontact",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CV Gateway-Get Data Request_Porsche_403_Forbidden_NoKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CV Gateway-Get Data Request_Porsche_403_Forbidden_NoKey Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_403_Forbidden_NoKey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo?phonecontact=7608416476",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									],
									"query": [
										{
											"key": "phonecontact",
											"value": "7608416476"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CV Gateway-Get Data Request_Porsche_403_Forbidden_WrongKey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CV Gateway-Get Data Request_Porsche_403_Forbidden_WrongKey Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_403_Forbidden_WrongKey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{x-apikey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo?phonecontact=7608416476",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									],
									"query": [
										{
											"key": "phonecontact",
											"value": "7608416476"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CV Gateway-Get Data Request_Porsche_404_NotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CV Gateway-Get Data Request_Porsche_404_NotFound status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_404_NotFound errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"404\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_404_NotFound errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_404_NotFound errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\");});\r",
											"pm.test(\"CV Gateway-Get Data Request_Porsche_404_NotFound errors[0].detail value\", function () {pm.expect(jsonData.errors[0].detail).to.eql(\"No data found\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo?phonecontact=6813403885",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									],
									"query": [
										{
											"key": "phonecontact",
											"value": "6813403885"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CV Gateway-Get Data Request_Porsche_500_InternalServerError",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Internal server error cannot be tested until server is down"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/vehicleinfo?phonecontact=7608416497",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"vehicleinfo"
									],
									"query": [
										{
											"key": "phonecontact",
											"value": "7608416497"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Toyoto",
			"item": [
				{
					"name": "Toyota_GetDataRequest",
					"item": [
						{
							"name": "ToyotaSaveDataRequest201SuccessCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"ToyotaSaveDataRequest201SuccessCode Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaSaveDataRequest201SuccessCode VarName\", function () {pm.expect(jsonData[0].VarName).to.eql(\"User-to-User\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest201SuccessCode Value\", function () {pm.expect(jsonData[0].Value).to.eql(\"00524f4144534944457e3230383031353438397e34322e3430367e2d37312e303734327e314e34414c334150304b433035353432317e656e\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"programcode\":\"toyota\",\r\n\"language\": \"en\",\r\n\"referenceid\": \"208015489\",\r\n \"geolocation\": \"42.406~-71.0742~400;enc-param=token\",\r\n \"vin\": \"1N4AL3AP0KC055421\"\r\n }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaGetDataRequest200SuccessCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var env = pm.environment.get(\"env\");\r",
											"console.log(env);\r",
											"var today = new Date().toJSON().slice(0,10).replace(/-/g,'-');\r",
											"console.log(today);\r",
											"var d = new Date();\r",
											"var hour = d.getUTCHours();\r",
											"if (hour >= 0 && hour < 10) \r",
											"{hour = \"0\" + hour;\r",
											"}\r",
											"var min = d.getUTCMinutes();\r",
											"if (min >= 0 && min < 10) \r",
											"{min = \"0\" + min;\r",
											"}\r",
											"var time = hour + \":\" + min; \r",
											"console.log(time);\r",
											"console.log(time + Date);\r",
											"\r",
											"var timestamp = today + \"T\" + time; \r",
											"console.log(timestamp);\r",
											"\r",
											"    pm.test(\"ToyotaGetDataRequest200SuccessCode Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaGetDataRequest200SuccessCode data.header.countrycode\", function () {pm.expect(jsonData.data.header.countrycode).to.eql(null);});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.language\", function () {pm.expect(jsonData.data.header.language).to.eql(\"en\");});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.programcode\", function () {pm.expect(jsonData.data.header.programcode).to.eql(\"toyota\");});\r",
											"\t\r",
											"\t\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.version\", function () {pm.expect(jsonData.data.header.version).to.eql(null);});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.referenceid\", function () {pm.expect(jsonData.data.header.referenceid).to.eql(\"208015489\");});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.eventid\", function () {pm.expect(jsonData.data.header.eventid).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.msisdn\", function () {pm.expect(jsonData.data.header.msisdn).to.eql(null);});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.calltype\", function () {pm.expect(jsonData.data.header.calltype).to.eql(null);});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.eventtype\", function () {pm.expect(jsonData.data.header.eventtype).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.calldate\", function () {pm.expect(jsonData.data.header.calldate).to.eql(today);});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.calltime\", function () {pm.expect(jsonData.data.header.calltime).to.eql(time);});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.timestamp\", function () {pm.expect(jsonData.data.header.timestamp).to.contain(timestamp);});\r",
											"\t\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.odomete\", function () {pm.expect(jsonData.data.header.odometer).to.eql(null);});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.header.odometerscale\", function () {pm.expect(jsonData.data.header.odometerscale).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.location.latitude\", function () {pm.expect(jsonData.data.location.latitude).to.eql(0.0);});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.location.longitude\", function () {pm.expect(jsonData.data.location.longitude).to.eql(0.0);});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.location.headingdirection\", function () {pm.expect(jsonData.data.location.headingdirection).to.eql(null);});\r",
											"\t\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.vehicle.vin\", function () {pm.expect(jsonData.data.vehicle.vin).to.eql(\"1N4AL3AP0KC055421\");});\r",
											"\tpm.test(\"ToyotaGetDataRequest200SuccessCode data.vehicle.brand\", function () {pm.expect(jsonData.data.vehicle.brand).to.eql(null);});\r",
											"    pm.test(\"ToyotaGetDataRequest200SuccessCode data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"200\");});\r",
											"    pm.test(\"ToyotaGetDataRequest200SuccessCode data.responsemessage value\", function () {pm.expect(jsonData.data.responsemessage).to.eql(\"Successfully retrieved\");});\r",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/208015489/programcode/toyota",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"208015489",
										"programcode",
										"toyota"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaGetDataRequest400BadRequestincorrectProgramcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"ToyotaGetDataRequest400BadRequestincorrectProgramcode Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"ToyotaGetDataRequest400BadRequestincorrectProgramcode errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"400\");}); \r",
											"   pm.test(\"ToyotaGetDataRequest400BadRequestincorrectProgramcode errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"BadRequest\");}); \r",
											"   \r",
											"pm.test(\"ToyotaGetDataRequest400BadRequestincorrectProgramcode errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Bad Request\");}); \r",
											" pm.test(\"ToyotaGetDataRequest400BadRequestincorrectProgramcode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/208015489/programcode/toyata",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"208015489",
										"programcode",
										"toyata"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaGetDataRequest403ForbiddenNoAPIkey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"ToyotaGetDataRequest403ForbiddenNoAPIkey  Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaGetDataRequest403ForbiddenNoAPIkey  message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/208015489/programcode/toyota",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"208015489",
										"programcode",
										"toyota"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaGetDataRequest403ForbiddenWrongAPIkey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"ToyotaGetDataRequest403ForbiddenWrongAPIkey  Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaGetDataRequest403ForbiddenWrongAPIkey  message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											"\t\t\t\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{x-apikey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/208015489/programcode/toyota",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"208015489",
										"programcode",
										"toyota"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaGetDataRequest404NotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"ToyotaGetDataRequest404NotFound  Status code is 404\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											" pm.test(\"ToyotaGetDataRequest404NotFound errors.status Value\", function () {pm.expect(jsonData .errors [0].status ).to.eql(\"404\");}); \r",
											"   pm.test(\"ToyotaGetDataRequest404NotFound errors.code Value\", function () {pm.expect(jsonData .errors [0].code ).to.eql(\"NotFound\");}); \r",
											"   \r",
											"pm.test(\"ToyotaGetDataRequest404NotFound errors.title Value\", function () {pm.expect(jsonData .errors [0].title ).to.eql(\"Not Found\");}); \r",
											"pm.test(\"ToyotaGetDataRequest404NotFound errors.detail Value\", function () {pm.expect(jsonData .errors [0].detail ).to.eql(\"No data found\");}); \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/208015480/programcode/toyota",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"208015480",
										"programcode",
										"toyota"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaGetDataRequest500InternalServerError",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Internal server error can be verified only when server is down"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bs_url}}/{{env}}/data/{{}}/programcode/toyota",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data",
										"{{}}",
										"programcode",
										"toyota"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Toyota_SaveDataRequest",
					"item": [
						{
							"name": "ToyotaSaveDataRequest201SuccessCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"ToyotaSaveDataRequest201SuccessCode Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaSaveDataRequest201SuccessCode VarName\", function () {pm.expect(jsonData[0].VarName).to.eql(\"User-to-User\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest201SuccessCode Value\", function () {pm.expect(jsonData[0].Value).to.eql(\"00524f4144534944457e3230383031353438397e34322e3430367e2d37312e303734327e314e34414c334150304b433035353432317e656e\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"programcode\":\"toyota\",\r\n\"language\": \"en\",\r\n\"referenceid\": \"208015489\",\r\n \"geolocation\": \"42.406~-71.0742~400;enc-param=token\",\r\n \"vin\": \"1N4AL3AP0KC055421\"\r\n }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaSaveDataRequest400BadRequestMissingProgramCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"ToyotaSaveDataRequest400BadRequestMissingProgramCode Status code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaSaveDataRequest400BadRequestMissingProgramCode errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest400BadRequestMissingProgramCode errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest400BadRequestMissingProgramCode errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest400BadRequestMissingProgramCode errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest400BadRequestMissingProgramCode detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"3\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest400BadRequestMissingProgramCode errors[0]s.detail.message value\", function () {pm.expect(jsonData.errors[0].detail.message).to.eql(\"Expecting property name enclosed in double quotes: line 2 column 1 (char 3)\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest400BadRequestMissingProgramCode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"value_error.jsondecode\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n//\"programcode\":\"toyota\",\r\n\"language\": \"en\",\r\n\"referenceid\": \"208015489\",\r\n \"geolocation\": \"42.406~-71.0742~400;enc-param=token\",\r\n// \"vin\": \"1N4AL3AP0KC055421\"\r\n }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaSaveDataRequest403ForbiddenNoAPIkey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaSaveDataRequest403ForbiddenNoAPIkey Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaSaveDataRequest403ForbiddenNoAPIkey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"programcode\":\"toyota\",\r\n\"language\": \"en\",\r\n\"referenceid\": \"208015489\",\r\n \"geolocation\": \"42.406~-71.0742~400;enc-param=token\",\r\n \"vin\": \"1N4AL3AP0KC055421\"\r\n }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaSaveDataRequest403ForbiddenWrongAPIkey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaSaveDataRequest403ForbiddenWrongAPIkey Status code is 403\", function () {\r",
											"        pm.response.to.have.status(403);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaSaveDataRequest403ForbiddenWrongAPIkey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{x-apikey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"programcode\":\"toyota\",\r\n\"language\": \"en\",\r\n\"referenceid\": \"208015489\",\r\n \"geolocation\": \"42.406~-71.0742~400;enc-param=token\",\r\n \"vin\": \"1N4AL3AP0KC055421\"\r\n }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/data",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"data"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaSaveDataRequest404NotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaSaveDataRequest404NotFound Status code is 404\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaSaveDataRequest404NotFound errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"404\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest404NotFound errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest404NotFound errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\");});\r",
											"    pm.test(\"ToyotaSaveDataRequest404NotFound errors[0].detail value\", function () {pm.expect(jsonData.errors[0].detail).to.eql(\"Missing Resource URI\");});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"programcode\":\"toyota\",\r\n\"language\": \"en\",\r\n\"referenceid\": \"208015489\",\r\n \"geolocation\": \"42.406~-71.0742~400;enc-param=token\",\r\n \"vin\": \"1N4AL3AP0KC055421\"\r\n }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/dta",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"dta"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Toyota_AgentAssignmentRequest",
					"item": [
						{
							"name": "ToyotaAgentAssignmentRequest201SuccessCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"ToyotaAgentAssignmentRequest201SuccessCode Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaAgentAssignmentRequest201SuccessCode data.reference_id\", function () {pm.expect(jsonData.data.reference_id).to.eql(\"208015489\");});\r",
											"    pm.test(\"ToyotaAgentAssignmentRequest201SuccessCode data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"ToyotaAgentAssignmentRequest201SuccessCode data.agent_assigned value\", function () {pm.expect(jsonData.data.agent_assigned).to.eql(true);});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"referenceid\": \"208015489\",\r\n    \"isassigned\": true,\r\n    \"programcode\": \"toyota\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaAgentAssignmentRequest400BadRequestIncorrectProgramCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaAgentAssignmentRequest400BadRequestIncorrectProgramCode Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"ToyotaAgentAssignmentRequest400BadRequestIncorrectProgramCode errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"ToyotaAgentAssignmentRequest400BadRequestIncorrectProgramCode errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"ToyotaAgentAssignmentRequest400BadRequestIncorrectProgramCode errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"ToyotaAgentAssignmentRequest400BadRequestIncorrectProgramCode errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"ToyotaAgentAssignmentRequest400BadRequestIncorrectProgramCode errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"ToyotaAgentAssignmentRequest400BadRequestIncorrectProgramCode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"ToyotaAgentAssignmentRequest400BadRequestIncorrectProgramCode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota', 'subaru'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"referenceid\": \"208015489\",\r\n    \"isassigned\": true,\r\n    \"programcode\": \"toyot\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaAgentAssignmentRequest403NoAPIkey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaAgentAssignmentRequest403NoAPIkey Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"ToyotaAgentAssignmentRequest403NoAPIkey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"referenceid\": \"208015489\",\r\n    \"isassigned\": true,\r\n    \"programcode\": \"toyota\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaAgentAssignmentRequest403WrongAPIkey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaAgentAssignmentRequest403WrongAPIkey Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"ToyotaAgentAssignmentRequest403WrongAPIkey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{x-apikey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"referenceid\": \"208015489\",\r\n    \"isassigned\": true,\r\n    \"programcode\": \"toyota\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignment",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignment"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaAgentAssignmentRequest404NotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaAgentAssignmentRequest404NotFound Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"ToyotaAgentAssignmentRequest404NotFound errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"404\");});\r",
											"pm.test(\"ToyotaAgentAssignmentRequest404NotFound errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\");});\r",
											"pm.test(\"ToyotaAgentAssignmentRequest404NotFound errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\");});\r",
											"pm.test(\"ToyotaAgentAssignmentRequest404NotFound errors[0].detail value\", function () {pm.expect(jsonData.errors[0].detail).to.eql(\"Missing Resource URI\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"referenceid\": \"208015489\",\r\n    \"isassigned\": true,\r\n    \"programcode\": \"toyota\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/agentassignmnt",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"agentassignmnt"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Toyota_TerminateRequest",
					"item": [
						{
							"name": "ToyotaTerminateRequest201SuccessCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    pm.test(\"ToyotaTerminateRequest201SuccessCode Status code is 201\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.test(\"ToyotaTerminateRequest201SuccessCode data.reference_id\", function () {pm.expect(jsonData.data.reference_id).to.eql(\"208015489\");});\r",
											"    pm.test(\"ToyotaTerminateRequest201SuccessCode data.status value\", function () {pm.expect(jsonData.data.status).to.eql(\"201\");});\r",
											"    pm.test(\"ToyotaTerminateRequest201SuccessCode data.msisdn value\", function () {pm.expect(jsonData.data.msisdn).to.eql(null);});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"referenceid\": \"208015489\",\r\n    \"programcode\": \"toyota\",\r\n    \"reasoncode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaTerminateRequest400BadRequestIncorrectProgramCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaTerminateRequest400BadRequestIncorrectProgramCode Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"ToyotaTerminateRequest400BadRequestIncorrectProgramCode errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"400\");});\r",
											"pm.test(\"ToyotaTerminateRequest400BadRequestIncorrectProgramCode errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"BadRequest\");});\r",
											"pm.test(\"ToyotaTerminateRequest400BadRequestIncorrectProgramCode errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Bad Request\");});\r",
											"pm.test(\"ToyotaTerminateRequest400BadRequestIncorrectProgramCode errors[0].detail.location[0] value\", function () {pm.expect(jsonData.errors[0].detail.location[0]).to.eql(\"body\");});\r",
											"pm.test(\"ToyotaTerminateRequest400BadRequestIncorrectProgramCode errors[0].detail.location[1] value\", function () {pm.expect(jsonData.errors[0].detail.location[1]).to.eql(\"programcode\");});\r",
											"pm.test(\"ToyotaTerminateRequest400BadRequestIncorrectProgramCode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.type).to.eql(\"type_error.enum\");});\r",
											"pm.test(\"ToyotaTerminateRequest400BadRequestIncorrectProgramCode errors[0].detail.type value\", function () {pm.expect(jsonData.errors[0].detail.message).to.contain(\"value is not a valid enumeration member; permitted: 'nissan', 'infiniti', 'fca', 'vwcarnet', 'porsche', 'toyota', 'subaru'\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"referenceid\": \"208015489\",\r\n    \"programcode\": \"toyot\",\r\n    \"reasoncode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaTerminateRequest403ForbiddenNoAPIkey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaTerminateRequest403ForbiddenNoAPIkey Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"ToyotaTerminateRequest403ForbiddenNoAPIkey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"referenceid\": \"208015489\",\r\n    \"programcode\": \"toyota\",\r\n    \"reasoncode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaTerminateRequest403ForbiddenWrongAPIkey",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaTerminateRequest403ForbiddenWrongAPIkey Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"ToyotaTerminateRequest403ForbiddenWrongAPIkey message value\", function () {pm.expect(jsonData.message).to.eql(\"Forbidden\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{x-apikey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"referenceid\": \"208015489\",\r\n    \"programcode\": \"toyota\",\r\n    \"reasoncode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminate",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "ToyotaTerminateRequest404NotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ToyotaTerminateRequest404NotFound Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"ToyotaTerminateRequest404NotFound errors[0].status value\", function () {pm.expect(jsonData.errors[0].status).to.eql(\"404\");});\r",
											"pm.test(\"ToyotaTerminateRequest404NotFound errors[0].code value\", function () {pm.expect(jsonData.errors[0].code).to.eql(\"NotFound\");});\r",
											"pm.test(\"ToyotaTerminateRequest404NotFound errors[0].title value\", function () {pm.expect(jsonData.errors[0].title).to.eql(\"Not Found\");});\r",
											"pm.test(\"ToyotaTerminateRequest404NotFound errors[0].detail value\", function () {pm.expect(jsonData.errors[0].detail).to.eql(\"Missing Resource URI\");});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{X-API-KEY}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"referenceid\": \"208015489\",\r\n    \"programcode\": \"toyota\",\r\n    \"reasoncode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{bs_url}}/{{env}}/terminat",
									"host": [
										"{{bs_url}}"
									],
									"path": [
										"{{env}}",
										"terminat"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "HealthCheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HeathCheck Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"HeathCheck data.success value\", function () {\r",
							"pm.expect(jsonData.data.success).to.eql(true);\r",
							"});\r",
							"pm.test(\"HeathCheck data.success value\", function () {\r",
							"pm.expect(jsonData.data.responsemessage).to.eql(\"HealthCheck passed\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-API-KEY",
						"value": "{{X-API-KEY}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{bs_url}}/{{env}}/health",
					"host": [
						"{{bs_url}}"
					],
					"path": [
						"{{env}}",
						"health"
					]
				}
			},
			"response": []
		}
	]
}