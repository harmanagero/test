service: sls-connected-vehicle-api

provider:
  name: aws
  vpc: ${self:custom.setupvars.vpc}  
  stage: ${self:custom.stage} # Set the default stage used. Can add default stage as well. 
  runtime: python3.8
  deploymentBucket: agero-${self:custom.accountId}-${self:custom.region}-sls-deploy # IMPORTANT!! Never change this!! Otherwise default is generated by the framework.
  timeout: 30  # The default is 6 seconds. Note: API Gateway current maximum is 30 seconds
  endpointType: regional  # Optional endpoint configuration for API Gateway REST API. Default is Edge.
  environment:  # These are shared across all functions and merged in to their environment variables.  Useful even with a single function.
    CUSTOM_DOMAIN_BASE_PATH: "/${self:custom.stage}"
    dynamo__table_name:
      "Fn::ImportValue": "sls-connectedvehicle-databases-${self:custom.stage}-TableName"
    dynamo__supplement_table_name:
      "Fn::ImportValue": "sls-connectedvehicle-databases-supplement-${self:custom.stage}-TableName"
    fca__api_key: ${self:custom.secrets.api_key}
    wirelesscar__api_key: ${self:custom.secrets.wirelesscar_api_key}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
        - dynamodb:BatchGetItem
        - dynamodb:GetItem
        - dynamodb:Update*
        - dynamodb:Delete*
        - dynamodb:BatchWriteItem
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:DescribeTable        
      Resource:
        - "Fn::ImportValue": "sls-connectedvehicle-databases-${self:custom.stage}-TableArn" 
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
        - dynamodb:BatchGetItem
        - dynamodb:GetItem
        - dynamodb:Update*
        - dynamodb:Delete*
        - dynamodb:BatchWriteItem
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:DescribeTable        
      Resource:
        - "Fn::ImportValue": "sls-connectedvehicle-databases-supplement-${self:custom.stage}-TableArn" 
    - Effect: "Allow"
      Action:
        - secretsmanager:GetSecretValue
      Resource:
        - arn:aws:secretsmanager:${self:custom.region}:${self:custom.accountId}:secret:${self:custom.stage}/connectedvehicle  #stage/connectedvehicle  prod/connectedvehicle
    - Effect: "Allow"
      Action:
        - kms:Decrypt
      Resource:
        - ${self:custom.kmsKey}

    - Effect: Allow
      Action:
        - codedeploy:*
      Resource:
        - "*"
  iamManagedPolicies:
    - "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"  

  stackTags:
    Name: ${self:service}-${self:custom.stage}
    Application: connectedvehicle
    Environment: ${self:custom.setupvars.environmentTag}
    TechnicalTeam: ${self:custom.setupvars.technicalTeam}
    BusinessTeam: ${self:custom.setupvars.businessTeam}
    AgeroService: ${self:custom.setupvars.ageroService}
    ComplianceType: ${self:custom.setupvars.complianceType}
    ClassificationLabel: ${self:custom.setupvars.classificationLabel}
    IsNGP: ${self:custom.setupvars.isngp}
    Tier: ${self:custom.setupvars.tier}
package:
  exclude: # Specify the directories and files which should be excluded in the deployment package
    - '**'
  include: # Specify the directories and files which should be included in the deployment package
    - '!./**'
    - './src/**'
    - './config/**'

custom:
  stage: ${opt:stage}
  setupvars: ${file(./infrastructure/application/serverless/config/${self:custom.stage}/${self:custom.region}/setupvars.yml):setupvars}
  accountId: ${self:custom.setupvars.accountId}
  envvars: ${file(./infrastructure/application/serverless/config/${self:custom.stage}/envvars.yml):envvars}
  region: ${opt:region}
  domainMappingKey: ${self:custom.stage}
  customDomain: ${self:custom.setupvars.customDomain}
  usageBurstLimit: ${self:custom.setupvars.usageBurstLimit}
  usageRateLimit: ${self:custom.setupvars.usageRateLimit}
  kmsKey: ${self:custom.setupvars.kmsKey}
  destinationArn: ${self:custom.setupvars.destinationArn}
  cloudWatchLogsTags:
      Name: ${self:service}-${self:custom.stage}
      Application: connectedvehicle
      Environment: ${self:custom.setupvars.environmentTag}
      TechnicalTeam: ${self:custom.setupvars.technicalTeam}
      BusinessTeam: ${self:custom.setupvars.businessTeam}
      AgeroService: ${self:custom.setupvars.ageroService}
      ComplianceType: ${self:custom.setupvars.complianceType}
      ClassificationLabel: ${self:custom.setupvars.classificationLabel}
      IsNGP: ${self:custom.setupvars.isngp}
      Tier: ${self:custom.setupvars.tier}
  secrets: ${ssm:/aws/reference/secretsmanager/${self:custom.stage}/connectedvehicle~true}
  pythonRequirements:
    slim: true
    slimPatterns:
      - 'requirements.txt'  # This removes requirements.txt from the Lambda Zip, otherwise it will result in a new deployment even if no code changed
  alerts:
    stages:  # Optionally - select which stages to deploy alarms to
      - prod
      - stage #To validate this won't break anything
      - qa #To validate this won't break anything
    dashboards: ${self:custom.setupvars.dashboard}
    topics:
      ok: ${self:service}-${self:custom.stage}-alerts-ok
      alarm:
        topic: ${self:service}-${self:custom.stage}-alerts-alarm
        notifications: ${self:custom.setupvars.notifications}
      insufficientData: ${self:service}-${self:custom.stage}-alerts-insufficientData    
    alarms: #The plugin provides some default definitions that you can simply drop into your application as below:
      - functionThrottles
      - functionErrors
      - functionDuration
      - customErrors
    definitions:
      functionDuration:
        namespace: 'AWS/Lambda'
        metric: Duration
        threshold: 10000
        statistic: 'p95'
        period: 60
        evaluationPeriods: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
        treatMissingData: ignore
      customErrors:
        metric: customErrors
        threshold: 0
        statistic: Sum
        period: 60
        evaluationPeriods: 1
        comparisonOperator: GreaterThanThreshold
        treatMissingData: ignore
        pattern: 'integration test failure' 

functions:
  api-request:
    name: ${self:service}-${self:custom.stage}
    handler: src.handler.handler  # The file and module for this specific function.
    description: Connected Vehicle gateway API
    environment: ${self:custom.envvars}
    layers:
      - arn:aws:lambda:${self:custom.region}:580247275435:layer:LambdaInsightsExtension:14
    events:  # The Events that trigger this Function
     - http:
        # This defines the URL path components to call this function
        path: /{proxy+}
        # These next two lines are to specify CORS. We'll talk about
        # this more in the article
        cors: true # @cors_headers() from lambda_decorators package also used on functions
        # This defines the type of HTTP request, e.g. GET, POST, etc.
        method: ANY
        private: true
    deploymentSettings:
      type: Canary10Percent5Minutes
      alias: Live
      alarms:
        - ApiDashrequestCustomErrorsAlarm  # When a string is provided, it expects the alarm Logical ID
    alarms:
      - name: function5XX
        description: '5XX response codes'
        namespace: 'AWS/ApiGateway'
        nameTemplate: $[functionName]-$[metricName]-apiGw5XXError   # Optionally - naming template for alarms, can be overwritten in definitions
        metric: apiGw5XXError
        omitDefaultDimension: true
        dimensions:
          - Name: ApiName
            Value: ${self:custom.stage}-${self:service}
          - Name: Stage
            Value: ${self:custom.stage}
        threshold: 10
        statistic: Sum
        period: 60
        evaluationPeriods: 1
        datapointsToAlarm: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
        treatMissingData: ignore
      - name: function4XX
        description: '4XX response codes'
        namespace: 'AWS/ApiGateway'
        nameTemplate: $[functionName]-$[metricName]-apiGw4XXError
        metric: 4XXError
        omitDefaultDimension: true
        dimensions:
          - Name: ApiName
            Value: ${self:provider.stage}-${self:service}
          - Name: Stage
            Value: ${self:provider.stage}
        threshold: 10
        statistic: Sum
        period: 60
        evaluationPeriods: 1
        datapointsToAlarm: 1
        comparisonOperator: GreaterThanOrEqualToThreshold   
resources:
  - ${file(./infrastructure/application/serverless/resources/customDomainMapping.yml)}
  - ${file(./infrastructure/application/serverless/resources/usagePlan.yml)}
  - ${file(./infrastructure/application/serverless/resources/cloudwatchSubscription.yml)}

  - Outputs:
      ApiGateWayId:
        Value: !Ref ApiGatewayRestApi
   
plugins:
  - serverless-python-requirements  
  - serverless-plugin-aws-alerts
  - serverless-plugin-canary-deployments
  - serverless-tag-cloud-watch-logs
